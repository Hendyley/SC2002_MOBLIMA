Index: src/main/java/MovieGoerModule/Transaction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package MovieGoerModule;\r\n\r\npublic class Transaction {\r\n    private String id;\r\n\r\n    private Ticket[] tickets;\r\n\r\n    public Transaction(String id, Ticket[] tickets) {\r\n        this.id = id;\r\n        this.tickets = tickets;\r\n    }\r\n\r\n    public String getId() {\r\n        return this.id;\r\n    }\r\n\r\n    public Ticket[] getTickets() {\r\n        return tickets;\r\n    }\r\n\r\n    public void printTickets() {\r\n        for (int i = 0; i < tickets.length; i++) {\r\n            System.out.println(\" Ticket \"+id.substring(0,id.indexOf(\"Cinema\"))+\" age category: \"+tickets[i].getAgetype()+\" seat:\"+tickets[i].getSeattype()+\" price:\"+tickets[i].getPrice()+\" purchased:\"+tickets[i].getDay()+\" qty:\"+tickets[i].getQuantity());\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MovieGoerModule/Transaction.java b/src/main/java/MovieGoerModule/Transaction.java
--- a/src/main/java/MovieGoerModule/Transaction.java	(revision 16135c0fea9ad59f61a2c5f003bebaaf557f98dc)
+++ b/src/main/java/MovieGoerModule/Transaction.java	(date 1667764065450)
@@ -20,7 +20,7 @@
 
     public void printTickets() {
         for (int i = 0; i < tickets.length; i++) {
-            System.out.println(" Ticket "+id.substring(0,id.indexOf("Cinema"))+" age category: "+tickets[i].getAgetype()+" seat:"+tickets[i].getSeattype()+" price:"+tickets[i].getPrice()+" purchased:"+tickets[i].getDay()+" qty:"+tickets[i].getQuantity());
+            System.out.println(" Ticket "+id.substring(0,id.indexOf("Cinema"))+"age category: "+tickets[i].getAgetype()+" seat:"+tickets[i].getSeattype()+" price:"+tickets[i].getPrice()+" purchased:"+tickets[i].getDay()+" qty:"+tickets[i].getQuantity());
         }
     }
 
Index: src/main/java/MovieGoerModule/MovieGoerModuleApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package MovieGoerModule;\r\n\r\nimport AdminModule.Holiday;\r\n\r\nimport java.time.DayOfWeek;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.*;\r\n\r\nimport static AdminModule.configureSettings.getPricelistFromFile;\r\n\r\n\r\npublic class MovieGoerModuleApp{\r\n\r\n    private final static String PRICELIST_FILE_NAME = \"Pricelist.txt\";\r\n    public static void main(String[] args) throws Exception {\r\n        // Initialisation\r\n        Calendar today = Calendar.getInstance();\r\n        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"uuuu/MM/dd HH:mm:ss\");\r\n        //System.out.println(dtf.format(now));\r\n        DateTimeFormatter df = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");\r\n        String[] holidays = { \"01/01/2022\", \"01/02/2022\", \"02/02/2022\", \"15/04/2022\", \"01/05/2022\", \"03/05/2022\",\r\n                \"15/05/2022\", \"10/07/2022\", \"09/08/2022\", \"24/10/2022\", \"25/12/2022\" };\r\n\r\n\r\n        // Cineplex cathay = new Cineplex(3);\r\n        // TimeSlot newSlot = new TimeSlot(\"02/11/2022\", 1700);\r\n\r\n        String Date1 = \"31/10/2022\";\r\n\r\n        Movie movie1 = new Movie(\"Batman\");\r\n        Movie movie2 = new Movie(\"Joker\");\r\n        Movie movie3 = new Movie(\"Superman\");\r\n\r\n        // Testing\r\n        Movie[] movieArr = new Movie[7];\r\n        movieArr[0] = new Movie(\"Batman\");\r\n        movieArr[1] = new Movie(\"Joker\");\r\n        movieArr[2] = new Movie(\"Superman\");\r\n        movieArr[3] = new Movie(\"Ironman\");\r\n        movieArr[4] = new Movie(\"Shazam\");\r\n        movieArr[5] = new Movie(\"Captain America\");\r\n        movieArr[6] = new Movie(\"Thor\");\r\n\r\n        movieArr[2].setAgetype(AgeOfMovieGoer.STUDENT);\r\n        movieArr[4].setAgetype(AgeOfMovieGoer.CHILD);\r\n\r\n        Cineplex[] cathay = new Cineplex[3];\r\n        cathay[0] = new Cineplex(3, \"cathay\");\r\n        cathay[1] = new Cineplex(3, \"cathay woodland\");\r\n        cathay[2] = new Cineplex(3, \"cathay boon lay\");\r\n\r\n        Cinema roomstyle = new Cinema();\r\n        roomstyle.setseattype(9,0,Seattype.COUPLE_SEAT);\r\n        roomstyle.setseattype(9,2,Seattype.COUPLE_SEAT);\r\n        roomstyle.setseattype(9,4,Seattype.COUPLE_SEAT);\r\n        roomstyle.setseattype(9,6,Seattype.COUPLE_SEAT);\r\n\r\n        roomstyle.setseattype(8,0,Seattype.ELITE_SEAT);\r\n        roomstyle.setseattype(8,2,Seattype.ELITE_SEAT);\r\n\r\n        roomstyle.setseattype(8,4,Seattype.ULTIMA_SEAT);\r\n        roomstyle.setseattype(8,6,Seattype.ULTIMA_SEAT);\r\n\r\n        // cathay[0].addSlot(new TimeSlot(Date1, \"0\", \"2\", ClassOfCinama.REGULAR,\r\n        // movieArr[0], roomstyle));\r\n        // cathay[0].addSlot(new TimeSlot(Date1, \"3\", \"5\", ClassOfCinama.DOLBY,\r\n        // movieArr[1], roomstyle));\r\n        // cathay[0].addSlot(new TimeSlot(Date1, \"6\", \"8\", ClassOfCinama.PLATINUM,\r\n        // movieArr[2], roomstyle));\r\n        // cathay[0].addSlot(new TimeSlot(Date1, \"8\", \"11\", ClassOfCinama.PLATINUM,\r\n        // movieArr[0], roomstyle));\r\n        // cathay[0].addSlot(new TimeSlot(Date1, \"11\", \"13\", ClassOfCinama.REGULAR,\r\n        // movieArr[3], roomstyle));\r\n        // cathay[0].addSlot(new TimeSlot(Date1, \"14\", \"16\", ClassOfCinama.REGULAR,\r\n        // movieArr[4], roomstyle));\r\n\r\n        movieArr[0].addSlot(new TimeSlot(\"01/01/2022\", \"1500\", \"1700\", ClassOfCinama.DOLBY, roomstyle));\r\n        movieArr[0].addSlot(new TimeSlot(\"01/02/2022\", \"1300\", \"1500\", ClassOfCinama.DOLBY, roomstyle));\r\n        movieArr[0].addSlot(new TimeSlot(\"01/03/2022\", \"0900\", \"1100\", ClassOfCinama.DOLBY, roomstyle));\r\n\r\n        movieArr[1].addSlot(new TimeSlot(\"01/05/2022\", \"1500\", \"1700\", ClassOfCinama.DOLBY, roomstyle));\r\n        movieArr[1].addSlot(new TimeSlot(\"01/06/2022\", \"1300\", \"1500\", ClassOfCinama.DOLBY, roomstyle));\r\n        movieArr[1].addSlot(new TimeSlot(\"01/07/2022\", \"0900\", \"1100\", ClassOfCinama.DOLBY, roomstyle));\r\n\r\n        movieArr[2].addSlot(new TimeSlot(\"01/08/2022\", \"1500\", \"1700\", ClassOfCinama.DOLBY, roomstyle));\r\n        movieArr[2].addSlot(new TimeSlot(\"01/09/2022\", \"1300\", \"1500\", ClassOfCinama.DOLBY, roomstyle));\r\n        movieArr[2].addSlot(new TimeSlot(\"01/10/2022\", \"0900\", \"1100\", ClassOfCinama.DOLBY, roomstyle));\r\n\r\n        cathay[0].getMovieList().add(movieArr[0]);\r\n        cathay[0].getMovieList().add(movieArr[1]);\r\n        cathay[0].getMovieList().add(movieArr[2]);\r\n\r\n        cathay[1].getMovieList().add(movieArr[0]);\r\n        cathay[1].getMovieList().add(movieArr[1]);\r\n\r\n        cathay[2].getMovieList().add(movieArr[1]);\r\n        cathay[2].getMovieList().add(movieArr[2]);\r\n\r\n        MovieGoer man = new MovieGoer(\"Derrick\", \"p\");\r\n        man.setAge(21);\r\n\r\n        // *************************\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        System.out.println(\"********************\");\r\n        System.out.println(\"Movie Goer Module\");\r\n        System.out.println(\"1. Search/List movie\");\r\n        System.out.println(\"2. View Movie details\");\r\n        System.out.println(\"3. Seat Availability and Booking\");\r\n        System.out.println(\"4. Book a ticket\");\r\n        System.out.println(\"5. View Booking History\");\r\n        System.out.println(\"6. List Top 5 Movies by sales OR by overall ratings\");\r\n\r\n        System.out.println(\"7. Give a movie review\");\r\n        System.out.println(\"8. Exit\");\r\n        System.out.println(\"********************\");\r\n\r\n        int option = 0, cinema = 0, choice = 0, Qty = 0;\r\n        float time;\r\n        String key, datetime, movie, seatdesc;\r\n        Cineplex cinename;\r\n        Scanner s = new Scanner(System.in);\r\n        do {\r\n            System.out.println(\"Enter Option\");\r\n            option = sc.nextInt();\r\n\r\n            switch (option) {\r\n                case 1:\r\n                    System.out.println(\"1. Search/List movie\");\r\n                    System.out.println(\"Search by keyword: \");\r\n                    key = s.nextLine();\r\n                    for (int i = 0; i < movieArr.length; i++) {\r\n                        if (movieArr[i].getTitle().toLowerCase().indexOf(key.toLowerCase()) > -1) {\r\n                            System.out.println(i + \" Movie \" + movieArr[i].getTitle());\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                case 2:\r\n                    System.out.println(\"2. View Movie details\");\r\n                    for (int i = 0; i < movieArr.length; i++) {\r\n                        System.out.println(i + \" Movie \" + movieArr[i].getTitle());\r\n                    }\r\n                    System.out.println(\"Select movie to view details\");\r\n                    choice = sc.nextInt();\r\n                    System.out.println(\"Movie details : \");\r\n                    System.out.println(\"Movie title: \" + movieArr[choice].getTitle());\r\n                    System.out.println(\"Movie status: \" + movieArr[choice].getStatus());\r\n                    System.out.println(\"Movie rating: \" + movieArr[choice].getRating());\r\n                    System.out.println(\"Movie Director: \" + movieArr[choice].getDirector());\r\n                    System.out.println(\"Movie synopsis: \" + movieArr[choice].getSynopsis());\r\n\r\n                    break;\r\n\r\n                case 3:\r\n                    ArrayList<String> dateList = new ArrayList<String>();\r\n                    ArrayList<TimeSlot> slotList = new ArrayList<TimeSlot>();\r\n                    ArrayList<TimeSlot> slotList2 = new ArrayList<TimeSlot>();\r\n                    String dateSelection = \"\";\r\n                    TimeSlot slotSelected;\r\n\r\n                    System.out.println(\"3. Seat Availability and Booking\");\r\n                    System.out.println(\"Enter which cineplex: \");\r\n                    for (int i = 0; i < cathay.length; i++) {\r\n                        System.out.println(i + \" Cinema: \" + cathay[i].getName());\r\n                    }\r\n                    cinema = sc.nextInt();\r\n                    if (cinema >= cathay.length) {\r\n                        System.out.println(\"Please Choose appropriate Cinema!\");\r\n                        break;\r\n                    }\r\n                    cinename = cathay[cinema];\r\n                    // if (cinename.getTimeslots().size() == 0) {\r\n                    // System.out.println(\"No Movie is airing in this cineplex\");\r\n                    // break;\r\n                    // }\r\n                    cinename.getMovieList();\r\n                    System.out.println(\"Which movie :\");\r\n\r\n                    for (int i = 0; i < cinename.getMovieList().size(); i++) {\r\n                        System.out.println(i + \" \" + cinename.getMovieList().get(i).getTitle());\r\n                    }\r\n                    int movieSelection = sc.nextInt();\r\n                    if (movieSelection >= cinename.getMovieList().size()) {\r\n                        System.out.println(\"Please Choose appropriate Movie!\");\r\n                        break;\r\n                    }\r\n                    slotList = cinename.getMovieList().get(movieSelection).getTimeSlots();\r\n\r\n                    if (slotList.size() == 0) {\r\n                        System.out.println(\"No date Available\");\r\n                    } else {\r\n                        System.out.println(\"Select a date\");\r\n                        String firstDate = slotList.get(0).getStringDate();\r\n                        System.out.println(0 + \" \" + slotList.get(0).getStringDate());\r\n                        dateList.add(firstDate);\r\n                        for (int i = 1; i < slotList.size(); i++) {\r\n                            if (slotList.get(i - 1).getStringDate() != slotList.get(i).getStringDate()) {\r\n                                dateList.add(slotList.get(i).getStringDate());\r\n                                System.out.println(i + \" \" + slotList.get(i).getStringDate());\r\n                            }\r\n                        }\r\n\r\n                        int input = sc.nextInt();\r\n                        if (input >= dateList.size()) {\r\n                            System.out.println(\"Please Choose appropriate Date!\");\r\n                            break;\r\n                        }\r\n                        dateSelection = dateList.get(input);\r\n                    }\r\n\r\n                    System.out.println(\"Select Timeslot\");\r\n                    for (int i = 0; i < slotList.size(); i++) {\r\n                        if (slotList.get(i).getStringDate() == dateSelection) {\r\n                            slotList2.add(slotList.get(i));\r\n                        }\r\n                    }\r\n                    for (int i = 0; i < slotList2.size(); i++) {\r\n                        System.out.println(\r\n                                i + \" \" + slotList2.get(i).getStartTime() + \"-\" +\r\n                                        slotList2.get(i).getEndTime());\r\n                    }\r\n\r\n                    int inputSlot = sc.nextInt();\r\n                    if (inputSlot >= slotList2.size()) {\r\n                        System.out.println(\"Please Choose appropriate TimeSlot!\");\r\n                        break;\r\n                    }\r\n                    slotSelected = slotList2.get(inputSlot);\r\n                    slotSelected.getRoom().printSeats();\r\n\r\n                    seatdesc = slotSelected.getRoom().getseattypedesc();\r\n                    String couples = seatdesc.substring(0,seatdesc.indexOf(\"Elite\"));\r\n                    String elite = seatdesc.substring(seatdesc.indexOf(\"Elite\"),seatdesc.indexOf(\"Ulti\"));\r\n                    String ulti = seatdesc.substring(seatdesc.indexOf(\"Ulti\"));\r\n                    System.out.println(couples);\r\n                    System.out.println(elite);\r\n                    System.out.println(ulti);\r\n\r\n                    break;\r\n                case 4:\r\n                    LocalDateTime now = LocalDateTime.now();\r\n                    ArrayList<TimeSlot> ts1 = null;\r\n                    ArrayList<String> datel = new ArrayList<String>();\r\n                    String dateS = \"\";\r\n                    TimeSlot tss = null;\r\n                    Cineplex cine = null;\r\n                    System.out.println(\"4. Book a ticket\");\r\n                    System.out.println(\"Select Cineplex\");\r\n                    System.out.println(\"Enter which cineplex: \");\r\n                    for (int i = 0; i < cathay.length; i++) {\r\n                        System.out.println(i + \" Cinema: \" + cathay[i].getName());\r\n                    }\r\n                    cinema = sc.nextInt();\r\n                    if(cinema>= cathay.length){\r\n                        System.out.println(\"Cannot find the cineplex\");\r\n                        break;\r\n                    }\r\n                    cine = cathay[cinema];\r\n\r\n                    //cine.getMovieList();\r\n                    if(cine.getMovieList().size()==0){\r\n                        System.out.println(\"No Movie is airing in this cineplex\");\r\n                        break;\r\n                    }\r\n\r\n                    System.out.println(\"Which movie :\");\r\n                    for (int i = 0; i < cine.getMovieList().size(); i++) {\r\n                        if( (cine.getMovieList().get(i).getStatus() == Status.NOW_SHOWING || cine.getMovieList().get(i).getStatus() == Status.PREVIEW) ){\r\n                            System.out.println(i + \" \" + cine.getMovieList().get(i).getTitle() + \" \" + cine.getMovieList().get(i).getStatus() );\r\n                        }\r\n                    }\r\n                    int moviechoice = sc.nextInt();\r\n                    if(moviechoice >= cine.getMovieList().size()){\r\n                        System.out.println(\"Please Choose appropriate Movie!\");\r\n                        break;\r\n                    }\r\n                    ts1 = cine.getMovieList().get(moviechoice).getTimeSlots();\r\n                    //Age requirement check\r\n                    if (man.getAgetype().ordinal() < cine.getMovieList().get(moviechoice).getAge_restriction().ordinal() ) {\r\n                        System.out.println(\"Age requirement required to watch \" + cine.getMovieList().get(moviechoice).getAge_restriction() + \" Movie\");\r\n                        break;\r\n                    }\r\n                    //Check booking type\r\n                    if(cine.getMovieList().get(moviechoice).getStatus() == Status.COMING_SOON || cine.getMovieList().get(moviechoice).getStatus() == Status.END_OF_SHOWING)\r\n                    if (ts1.size() == 0) {\r\n                        System.out.println(\"The movie is coming soon or not showing now\");\r\n                        break;\r\n                    }\r\n\r\n                    System.out.println(\"Select a date\");\r\n                    String firstDate = ts1.get(0).getStringDate();\r\n                    System.out.println(0 + \" \" + ts1.get(0).getStringDate());\r\n                    datel.add(firstDate);\r\n                    for (int i = 1; i < ts1.size(); i++) {\r\n                        if (ts1.get(i - 1).getStringDate() != ts1.get(i).getStringDate()) {\r\n                            datel.add(ts1.get(i).getStringDate());\r\n                            System.out.println(i + \" \" + ts1.get(i).getStringDate());\r\n                        }\r\n                    }\r\n\r\n                    int input = sc.nextInt();\r\n                    dateS = datel.get(input);\r\n\r\n\r\n                    System.out.println(\"Select Timeslot\");\r\n                    ArrayList<Integer> tsnum = new ArrayList<>();\r\n                    int slot = 0;\r\n                    for (int i = 0; i < ts1.size(); i++) {\r\n                        if (ts1.get(i).getStringDate() == dateS) {\r\n                            System.out.println(slot + \" \" + ts1.get(i).getStartTime() + \"-\" +ts1.get(i).getEndTime());\r\n                            tsnum.add(i); slot++;\r\n                        }\r\n                    }\r\n                    choice = sc.nextInt();\r\n\r\n                    if (choice >= tsnum.size()) {\r\n                        System.out.println(\"Please Choose appropriate timeslot!\");\r\n                        break;\r\n                    }\r\n                    tss = ts1.get(tsnum.get(choice));\r\n                    //System.out.println(\"selected \"+tsnum.get(choice));\r\n                    //tss.getRoom().printSeats();\r\n\r\n\r\n                    System.out.println(\"Select Qty: \");\r\n                    Qty = sc.nextInt();\r\n                    ArrayList<Integer> ticketagelist= new ArrayList<>();\r\n                    for(int i=0;i<Qty;i++){\r\n                        System.out.println(\"Selecting Age Catefory for Customer \"+i);\r\n                        System.out.println(\"0 for CHILD\");\r\n                        System.out.println(\"1 for STUDENT\");\r\n                        System.out.println(\"2 for SENIOR\");\r\n                        System.out.println(\"3 for ADULT\");\r\n                        int age = sc.nextInt();\r\n                        if( (age>3) || (age<0) || age<cine.getMovieList().get(moviechoice).getAge_restriction().ordinal() ){\r\n                            Qty=-1;\r\n                            break;\r\n                        }\r\n                        ticketagelist.add(age);\r\n                    }\r\n                    if(Qty == -1){\r\n                        System.out.println(\"Age requirement required to watch \" + cine.getMovieList().get(moviechoice).getAge_restriction() + \" Movie\");\r\n                        break;\r\n                    }\r\n\r\n                    LocalDate dt = LocalDate.parse(dateS, df);\r\n                    Day d;\r\n                    Integer starttime = Integer.parseInt( tss.getStartTime().substring(0,2) );\r\n                    Integer endtime = Integer.parseInt( tss.getEndTime().substring(0,2) );\r\n                    if (dt.getDayOfWeek() == DayOfWeek.MONDAY || dt.getDayOfWeek() == DayOfWeek.TUESDAY || dt.getDayOfWeek() == DayOfWeek.WEDNESDAY) {\r\n                        d = Day.MON_TO_WED;\r\n                    } else if (dt.getDayOfWeek() == DayOfWeek.FRIDAY && ( !(starttime <= 6 && 6 <= endtime) || (starttime>6) || (endtime<6)  ) ) {\r\n                        d = Day.FRI_BEFORE_6;\r\n                    } else if (dt.getDayOfWeek() == DayOfWeek.THURSDAY) {\r\n                        d = Day.THURS;\r\n                    }  else {\r\n                        d = Day.REMAINING_DAYS;\r\n                    }\r\n\r\n                    for(int i=0; i<holidays.length;i++){\r\n                        if(holidays[i].indexOf(dateS) > -1){\r\n                            d = Day.REMAINING_DAYS;\r\n                        }\r\n                    }\r\n\r\n                    String transid = \"Cinema :\"+cine.getName()+\" Movie title :\"+cine.getMovieList().get(moviechoice).getTitle()+\" \"+tss.getairingtimeformat()+\" \"+d+\" \"+tss.getMovieClass()+\" \"+cine.getMovieList().get(moviechoice).getType();\r\n                    System.out.println(transid);\r\n                    seatdesc = tss.getRoom().getseattypedesc();\r\n                    //System.out.println(\"Seatdesc : \"+seatdesc);\r\n                    String couples1 = seatdesc.substring(0,seatdesc.indexOf(\"Elite\"));\r\n                    String elite1 = seatdesc.substring(seatdesc.indexOf(\"Elite\"),seatdesc.indexOf(\"Ulti\"));\r\n                    String ulti1 = seatdesc.substring(seatdesc.indexOf(\"Ulti\"));\r\n                    cine.getMovieList().get(moviechoice).getTimeSlots().get(tsnum.get(choice)).getRoom().printSeats();\r\n                    //Cinema c = cine.getMovieList().get(moviechoice).getTimeSlots().get(tsnum.get(choice)).getRoom();\r\n                    System.out.println(couples1);\r\n                    System.out.println(elite1);\r\n                    System.out.println(ulti1);\r\n                    ArrayList<Seattype> selectedseattype = new ArrayList<>();\r\n                    System.out.println(\"Select Seats: (Example: A12, B9 )\");\r\n                    for (int q = 0; q < Qty; q++) {\r\n                        String selectseat = s.nextLine();\r\n\r\n                        int row = Integer.valueOf(selectseat.toLowerCase().substring(0, 1).charAt(0) - 96) - 1;\r\n                        int col = Integer.parseInt(selectseat.substring(1)) - 1 ;\r\n                        //System.out.println(\"Gettype : \"+tss.getRoom().getseattype(row,col)+\" \"+row+\" \"+col+tss.getRoom().checkseat(row, col));\r\n                        if ((row<10) && (col<12) ) {\r\n                            if(!tss.getRoom().checkseat(row, col)){\r\n                                if(tss.getRoom().getseattype(row,col).ordinal() != Seattype.SEAT.ordinal()){\r\n                                    q = q + 1;\r\n                                    if((q) >= Qty){\r\n                                        System.out.println(\"Sorry the seat required 2 seaters. Choose again!\");\r\n                                        q = q - 2;\r\n                                    } else{\r\n                                        tss.getRoom().book(row, col);\r\n                                        selectedseattype.add(tss.getRoom().getseattype(row,col));\r\n                                        selectedseattype.add(tss.getRoom().getseattype(row,col));\r\n                                        System.out.println(\"Double seats selected!\");\r\n                                    }\r\n                                }\r\n\r\n                                if(tss.getRoom().getseattype(row,col).ordinal() == Seattype.SEAT.ordinal()){\r\n                                    tss.getRoom().book(row, col);\r\n                                    selectedseattype.add(tss.getRoom().getseattype(row,col));\r\n                                    System.out.println(\"Seat selected!\");\r\n                                }\r\n\r\n                            }else{\r\n                                System.out.println(\"Sorry the seat is taken. Choose again!\");\r\n                                q = q - 1;\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"Sorry the seat is taken. Choose again!\");\r\n                            q = q - 1;\r\n                        }\r\n                    }\r\n\r\n\r\n                    //Ticket create part\r\n                    Ticket[] t = new Ticket[Qty];\r\n                    ArrayList<Object> priceLists = getPricelistFromFile();\r\n                    //String ageprice = priceLists.get(0).toString();\r\n                    HashMap<String,Double> ageList = (HashMap<String,Double>)priceLists.get(0);\r\n                    HashMap<String,Double> seatTypeList = (HashMap<String,Double>)priceLists.get(1);\r\n                    HashMap<String,Double> cinemaClassList = (HashMap<String,Double>)priceLists.get(2);\r\n                    HashMap<String,Double> movieClassList = (HashMap<String,Double>)priceLists.get(3);\r\n                    HashMap<String,Double> dayList = (HashMap<String,Double>)priceLists.get(4);\r\n\r\n                    for(int i=0;i<Qty;i++){\r\n                        double ticketprice = 0;\r\n                        //Calculating price\r\n                        for (Map.Entry<String, Double> age : ageList.entrySet()) {\r\n                            String keys = age.getKey();\r\n                            Double value = age.getValue();\r\n                            //System.out.println(keys+\" \"+value+\" \"+ AgeOfMovieGoer.values()[ticketagelist.get(i)].toString());\r\n                            if(keys.equals( AgeOfMovieGoer.values()[ticketagelist.get(i)].toString()) ){\r\n                                System.out.println(\"Calculating for \"+AgeOfMovieGoer.values()[ticketagelist.get(i)].toString());\r\n                                ticketprice += value;\r\n                            }\r\n                        }\r\n                        for (Map.Entry<String, Double> seatType : seatTypeList.entrySet()) {\r\n                            String keys = seatType.getKey();\r\n                            Double value = seatType.getValue();\r\n                            if(keys.equals( selectedseattype.get(i).toString() )){\r\n                                System.out.println(\"Calculating for \"+selectedseattype.get(i).toString());\r\n                                ticketprice += value;\r\n                            }\r\n                        }\r\n                        for (Map.Entry<String, Double> cinemaClass : cinemaClassList.entrySet()) {\r\n                            String keys = cinemaClass.getKey();\r\n                            Double value = cinemaClass.getValue();\r\n                            if(keys.equals( tss.getMovieClass().toString() )){\r\n                                System.out.println(\"Calculating for \"+tss.getMovieClass().toString());\r\n                                ticketprice += value;\r\n                            }\r\n                        }\r\n                        for (Map.Entry<String, Double> movieClass : movieClassList.entrySet()) {\r\n                            String keys = movieClass.getKey();\r\n                            Double value = movieClass.getValue();\r\n                            if(keys.equals( cine.getMovieList().get(moviechoice).getType().toString() )){\r\n                                System.out.println(\"Calculating for \"+cine.getMovieList().get(moviechoice).getType().toString());\r\n                                ticketprice += value;\r\n                            }\r\n                        }\r\n                        for (Map.Entry<String, Double> day : dayList.entrySet()) {\r\n                            String keys = day.getKey();\r\n                            Double value = day.getValue();\r\n                            //System.out.println(keys+\" \"+value+\" \"+ d.toString());\r\n                            if(keys.equals( d.toString()) ){\r\n                                System.out.println(\"Calculating for \"+d.toString());\r\n                                ticketprice += value;\r\n                            }\r\n                        }\r\n                        t[i] = new Ticket(1, AgeOfMovieGoer.values()[ticketagelist.get(i)] , cine.getMovieList().get(moviechoice).getType(), tss.getMovieClass(), d, selectedseattype.get(i), ticketprice);\r\n                        cine.getMovieList().get(moviechoice).addsales(ticketprice); //add to movie\r\n                    }\r\n                    Transaction trans = new Transaction(dtf.format(now).toString() +\" \"+ transid, t);\r\n                    man.getTransactionHistory().add(trans);\r\n\r\n                    System.out.println(Qty + \" Booking places!\");\r\n                    break;\r\n                case 5:\r\n                    System.out.println(\"5. View Booking History\");\r\n                    ArrayList<Transaction> temptrans = man.getTransactionHistory();\r\n                    System.out.println(\"Here is your Transaction :\");\r\n                    for(int i=0;i<temptrans.size();i++){\r\n                        System.out.println(\"Transaction \"+temptrans.get(i).getId());\r\n                        temptrans.get(i).printTickets();\r\n                    }\r\n\r\n                    break;\r\n\r\n                case 6:\r\n                    System.out.println(\"6. List Top 5 Movies by sales OR by overall ratings\");\r\n\r\n                    // array for sorting\r\n                    Movie[] top5m = movieArr;\r\n                    System.out.println(\"1. by sales\");\r\n                    System.out.println(\"2. by rating\");\r\n                    choice = sc.nextInt();\r\n\r\n                    if(choice>2){\r\n                        System.out.println(\"Sorry, please select input appropriate value\");\r\n                        break;\r\n                    }\r\n\r\n                    switch (choice) {\r\n                        case 1:\r\n                            // Sort by sales only\r\n                            Movie keyss;\r\n                            int js;\r\n                            for (int i = 1; i < top5m.length; i++) {\r\n                                keyss = top5m[i];\r\n                                js = i - 1;\r\n                                while (js >= 0 && top5m[js].getSales() < keyss.getSales()) {\r\n                                    top5m[js + 1] = top5m[js];\r\n                                    js = js - 1;\r\n                                }\r\n                                top5m[js + 1] = keyss;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            // Sort by Rating only\r\n                            Movie keys;\r\n                            int j;\r\n                            for (int i = 1; i < top5m.length; i++) {\r\n                                keys = top5m[i];\r\n                                j = i - 1;\r\n                                while (j >= 0 && top5m[j].getrealrating() < keys.getrealrating()) {\r\n                                    top5m[j + 1] = top5m[j];\r\n                                    j = j - 1;\r\n                                }\r\n                                top5m[j + 1] = keys;\r\n                            }\r\n                            break;\r\n                    }\r\n                    System.out.println(\"Here are the top 5 list: \");\r\n                    int n = 5;\r\n                    if (top5m.length < 5) {\r\n                        n = top5m.length;\r\n                    }\r\n                    for (int i = 0; i < n; i++) {\r\n                        System.out.println(i + \" Movie: \" + top5m[i].getTitle() + \" Rating: \" + top5m[i].getRating()\r\n                                + \" Sales: \" + top5m[i].getSales() + \" Number of reviewer: \"\r\n                                + top5m[i].getnumberofreviewer());\r\n                    }\r\n                    System.out.println(\"Select movie to view review comment\");\r\n                    choice=sc.nextInt();\r\n                    if(choice>=n || choice<0){\r\n                        //System.out.println(\"Sorry, please select input appropriate value\");\r\n                        break;\r\n                    }\r\n                    ArrayList<Review> tempreview = top5m[choice].getreviewlist();\r\n                    for(int i=0;i<tempreview.size();i++){\r\n                        System.out.println(\"Comment \"+i+\": \"+tempreview.get(i).getRemark());\r\n                    }\r\n\r\n\r\n                    break;\r\n                case 7:\r\n                    System.out.println(\"7. Give a movie review\");\r\n                    System.out.println(\"List of all current movie with rating\");\r\n                    for (int i = 0; i < movieArr.length; i++) {\r\n                        System.out.println(\r\n                                i + \" Movie \" + movieArr[i].getTitle() + \" current rating \" + movieArr[i].getRating()\r\n                                        + \" number of reviewer: \" + movieArr[i].getnumberofreviewer());\r\n                    }\r\n                    int choose = sc.nextInt();\r\n                    if(choose>=movieArr.length){\r\n                        System.out.println(\"Sorry, Movie not found\");\r\n                    }\r\n\r\n                    System.out.println(\"Give a rating from 1-5\");\r\n                    int rating = sc.nextInt();\r\n                    sc = new Scanner(System.in);\r\n                    System.out.println(\"Give a review\");\r\n                    String review = sc.nextLine();\r\n\r\n                    Review rv = new Review(rating, review);\r\n                    movieArr[choose].addReview(rv);\r\n                    ArrayList<Review> reviewlist = movieArr[choose].getreviewlist();\r\n                    movieArr[choose].updatereviewscore(reviewlist);\r\n\r\n                    System.out.println(\"Thank you for the review.\");\r\n\r\n                    break;\r\n                case 8:\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n        } while (option != 8);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MovieGoerModule/MovieGoerModuleApp.java b/src/main/java/MovieGoerModule/MovieGoerModuleApp.java
--- a/src/main/java/MovieGoerModule/MovieGoerModuleApp.java	(revision 16135c0fea9ad59f61a2c5f003bebaaf557f98dc)
+++ b/src/main/java/MovieGoerModule/MovieGoerModuleApp.java	(date 1667764187030)
@@ -592,7 +592,7 @@
                     break;
             }
 
-        } while (option != 8);
+        } while (option >= 8);
 
     }
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" default=\"true\" project-jdk-name=\"19\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 16135c0fea9ad59f61a2c5f003bebaaf557f98dc)
+++ b/.idea/misc.xml	(date 1667763951007)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="19" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
