Index: src/main/java/AdminModule/cineplexDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package AdminModule;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\n\r\nimport MovieGoerModule.AgeOfMovieGoer;\r\nimport MovieGoerModule.Cinema;\r\nimport MovieGoerModule.Cineplex;\r\nimport MovieGoerModule.ClassOfCinema;\r\nimport MovieGoerModule.Movie;\r\nimport MovieGoerModule.Seattype;\r\nimport MovieGoerModule.Status;\r\nimport MovieGoerModule.TimeSlot;\r\nimport MovieGoerModule.TypeOfMovie;\r\n\r\npublic class cineplexDB {\r\n    private final static String Cineplex_FILE_NAME = \"Cineplex.txt\";\r\n\r\n    public static ArrayList<Cineplex> getCineplexListFromFile() throws IOException, ClassNotFoundException{\r\n        ArrayList<Cineplex> cineplexList;\r\n\r\n        try{\r\n            FileInputStream fileInputStream2 = new FileInputStream(Cineplex_FILE_NAME);\r\n            ObjectInputStream objectInputStream2 = new ObjectInputStream(fileInputStream2);\r\n            cineplexList = (ArrayList<Cineplex>) objectInputStream2.readObject();\r\n            objectInputStream2.close();\r\n            System.out.println(\"Cineplex List retrieved from File\");           \r\n        }catch(FileNotFoundException e){\r\n            FileOutputStream fileOutputStream = new FileOutputStream(Cineplex_FILE_NAME);\r\n            ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);\r\n            cineplexList = generateDummyData();\r\n            objectOutputStream.writeObject(cineplexList);\r\n            objectOutputStream.flush();\r\n            objectOutputStream.close();\r\n            System.out.println(\"Cineplex List File not found, creating new Cineplex List File\");           \r\n        }\r\n\r\n        return cineplexList;\r\n    }\r\n\r\n    public static void addCineplexListToFile(ArrayList<Cineplex> CineplexList) throws IOException {\r\n        FileOutputStream fileOutputStream = new FileOutputStream(Cineplex_FILE_NAME);\r\n        ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);\r\n        objectOutputStream.writeObject(CineplexList);\r\n        objectOutputStream.flush();\r\n        objectOutputStream.close();\r\n        System.out.printf(\"Cineplex Lists added to File\\n\");\r\n    }\r\n\r\n    public static boolean isExistingCineplex(ArrayList<Cineplex> cineplexList, String newCineplexnameCineplex){\r\n        for(Cineplex cine: cineplexList){\r\n            if(cine.getName().equals(newCineplexnameCineplex)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static int getCineplexIndex(ArrayList<Cineplex> cineplexList, String nameCineplex){\r\n        String currentnameCineplex = \"\";\r\n        for(int i = 0; i < cineplexList.size(); i++){\r\n           currentnameCineplex = cineplexList.get(i).getName();\r\n           if(currentnameCineplex.equals(nameCineplex)){\r\n                return i;\r\n           };\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public static void printCineplexList() throws ClassNotFoundException, IOException{\r\n        ArrayList<Cineplex> cineplexList = getCineplexListFromFile();\r\n\r\n        System.out.println();\r\n        System.out.println(\"Printing out Cineplex List\");\r\n        for(Cineplex cineplex : cineplexList){\r\n            System.out.println(cineplex.getName());\r\n            System.out.println(\"-----------------\");\r\n            for(Cinema room : cineplex.getRoomList()){\r\n                System.out.printf(\"ID: %s\\n\",room.getID());\r\n            }\r\n            System.out.println(\"\");\r\n        }\r\n        System.out.printf(\"\\n\\n\");\r\n\r\n    }\r\n\r\n    public static boolean isExistingMovie(ArrayList<Movie> movieList, String newMovieTitle){\r\n        for(Movie m: movieList){\r\n            if(m.getTitle().equals(newMovieTitle)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static int getMovieIndex(ArrayList<Movie> movieList, String title){\r\n        String currentTitle = \"\";\r\n        for(int i = 0; i < movieList.size(); i++){\r\n           currentTitle = movieList.get(i).getTitle();\r\n           if(currentTitle.equals(title)){\r\n                return i;\r\n           };\r\n        }\r\n        return -1;\r\n    }\r\n    \r\n    public static ArrayList<Cineplex> generateDummyData(){\r\n        ArrayList<Cineplex> cineplexList = new ArrayList<>();\r\n        Cinema cinema1,cinema2,cinema3, tempCinema;\r\n        Movie movie1,movie2,movie3,movie4;\r\n        String movieTitle;\r\n        String director;\r\n        ArrayList<String> cast;\r\n        String synopsis;\r\n        int movieDurationMin;\r\n        TimeSlot timeslot1,timeslot2,timeslot3,timeslot4;\r\n        \r\n\r\n        ///////////////////////////// Cineplex 1\r\n        Cineplex cineplex1 = new Cineplex(\"Cathay AMK Hub\");\r\n        cinema1 = new Cinema(\"AMK_001\",ClassOfCinema.REGULAR);\r\n        cinema2 = new Cinema(\"AMK_002\",ClassOfCinema.DOLBY);\r\n        cinema3 = new Cinema(\"AMK_003\",ClassOfCinema.PLATINUM);\r\n        //generate special seat\r\n        cineplex1.setRoom(cinema1);\r\n        cineplex1.setRoom(cinema2);\r\n        cineplex1.setRoom(cinema3);\r\n        //movie1\r\n        movieTitle = \"ONE PIECE FILM RED\";\r\n        director =\"Goro Taniguchi\";\r\n        cast = new ArrayList<String>(Arrays.asList(\"Ikue Otani\",\"Kaori Nazuka\",\"Mayumi Tanaka\"));\r\n        synopsis = \"Uta - the most beloved singer in the world.\\n\"\r\n        +\"Her voice, which she sings with while concealing her true identity\\n\";\r\n        movieDurationMin = 115;\r\n        movie1 = new Movie(movieTitle,director,cast,synopsis,Status.NOW_SHOWING\r\n            ,TypeOfMovie.BLOCKBUSTER_2D,movieDurationMin,AgeOfMovieGoer.STUDENT);\r\n        //movie2\r\n        movieTitle = \"Kung Fu Hustle\";\r\n        director =\"Stephen Chow\";\r\n        cast = new ArrayList<String>(Arrays.asList(\"Stephen Chow\",\"Danny Chan\",\"Yuen Wah\"));\r\n        synopsis = \"When the hapless Sing (Stephen Chow) and his dim-witted pal,\\n\"\r\n         +\"Bone (Feng Xiaogang), try to scam the residents of Pig Sty Alley\\n\";\r\n        movieDurationMin = 98;\r\n        movie2 = new Movie(movieTitle,director,cast,synopsis,Status.COMING_SOON\r\n            ,TypeOfMovie.BLOCKBUSTER_2D, movieDurationMin,AgeOfMovieGoer.STUDENT);\r\n\r\n\r\n        //movie3\r\n        movieTitle = \"Black Adam\";\r\n        director =\"Jaume Collet-Serra\";\r\n        cast = new ArrayList<String>(Arrays.asList(\"The Rock\",\"Sam Worthington\"));\r\n        synopsis = \"In 2600 BC, the tyrannical king Ahk-Ton of Kahndaq creates the Crown of Sabbac to attain great power. After attempting to stage a revolt, a young slave boy is given the powers of Shazam by the Council of Wizards, transforming him into Kahndaq's heroic champion, who kills Ahk-Ton and ends his reign.\\n\";\r\n        movieDurationMin = 125;\r\n        movie3 = new Movie(movieTitle,director,cast,synopsis,Status.NOW_SHOWING\r\n                ,TypeOfMovie.BLOCKBUSTER_3D,movieDurationMin,AgeOfMovieGoer.ADULT);\r\n\r\n        //movie3\r\n        movieTitle = \"Avatar: The Way of Water\";\r\n        director =\"James Cameron\";\r\n        cast = new ArrayList<String>(Arrays.asList(\"Zoe Saldana\",\"Sam Worthington\"));\r\n        synopsis = \"the second film in Cameron's Avatar franchise\";\r\n        movieDurationMin = 190;\r\n        movie4 = new Movie(movieTitle,director,cast,synopsis,Status.PREVIEW\r\n                ,TypeOfMovie.REGULAR_2D,movieDurationMin,AgeOfMovieGoer.CHILD);\r\n                \r\n        //timeslot1\r\n        tempCinema =  new Cinema(\"AMK_001\",ClassOfCinema.REGULAR);\r\n        timeslot1 = new TimeSlot(\"11/12/2022\",\"1600\",tempCinema\r\n            ,movie1.getTitle(),movie1.getMovieDurationMin(),movie1.getType());\r\n\r\n        //timeslot2\r\n        tempCinema = new Cinema(\"AMK_002\",ClassOfCinema.DOLBY);\r\n        timeslot2 = new TimeSlot(\"18/12/2022\",\"1900\",tempCinema\r\n            ,movie2.getTitle(),movie2.getMovieDurationMin(),movie2.getType());\r\n\r\n\r\n        //timeslot3\r\n        tempCinema = new Cinema(\"AMK_003\",ClassOfCinema.PLATINUM);\r\n        timeslot3 = new TimeSlot(\"22/11/2022\",\"1500\",tempCinema\r\n            ,movie3.getTitle(),movie3.getMovieDurationMin(),movie3.getType());\r\n\r\n        //timeslot4\r\n        tempCinema = new Cinema(\"AMK_001\",ClassOfCinema.REGULAR);\r\n        timeslot4 = new TimeSlot(\"14/12/2022\",\"2000\",tempCinema\r\n            ,movie4.getTitle(),movie4.getMovieDurationMin(),movie4.getType());\r\n\r\n        //settings\r\n        movie1.addSlot(timeslot1);\r\n        movie2.addSlot(timeslot2);\r\n        movie3.addSlot(timeslot3);\r\n        movie4.addSlot(timeslot4);\r\n        cineplex1.addMovie(movie1);\r\n        cineplex1.addMovie(movie2);\r\n        cineplex1.addMovie(movie3);\r\n        cineplex1.addMovie(movie4);\r\n        \r\n        /////////////////////// Cineplex 2\r\n        Cineplex cineplex2 = new Cineplex(\"Cathay Parkway Parade\");\r\n        cinema1 = new Cinema(\"PP_001\",ClassOfCinema.REGULAR);\r\n        cinema2 = new Cinema(\"PP_002\",ClassOfCinema.DOLBY);\r\n        cinema3 = new Cinema(\"PP_003\",ClassOfCinema.PLATINUM);\r\n\r\n        cineplex2.setRoom(cinema1);\r\n        cineplex2.setRoom(cinema2);\r\n        cineplex2.setRoom(cinema3);\r\n\r\n        movie1 = new Movie(movieTitle,director,cast,synopsis,Status.NOW_SHOWING\r\n        ,TypeOfMovie.BLOCKBUSTER_2D,movieDurationMin,AgeOfMovieGoer.STUDENT);\r\n        movie2 = new Movie(movieTitle,director,cast,synopsis,Status.COMING_SOON\r\n        ,TypeOfMovie.BLOCKBUSTER_2D, movieDurationMin,AgeOfMovieGoer.STUDENT);\r\n        movie3 = new Movie(movieTitle,director,cast,synopsis,Status.NOW_SHOWING\r\n        ,TypeOfMovie.BLOCKBUSTER_3D,movieDurationMin,AgeOfMovieGoer.ADULT);\r\n        movie4 = new Movie(movieTitle,director,cast,synopsis,Status.PREVIEW\r\n        ,TypeOfMovie.REGULAR_2D,movieDurationMin,AgeOfMovieGoer.CHILD);\r\n\r\n        cineplex2.addMovie(movie1);\r\n        cineplex2.addMovie(movie2);\r\n        cineplex2.addMovie(movie3);\r\n        cineplex2.addMovie(movie4);\r\n\r\n        /////////////////////// Cineplex 3\r\n        Cineplex cineplex3 = new Cineplex(\"Cathay West Mall\");\r\n        cinema1 = new Cinema(\"WM_001\",ClassOfCinema.REGULAR);\r\n        cinema2 = new Cinema(\"WM_002\",ClassOfCinema.DOLBY);\r\n        cinema3 = new Cinema(\"WM_003\",ClassOfCinema.PLATINUM);\r\n\r\n        cineplex3.setRoom(cinema1);\r\n        cineplex3.setRoom(cinema2);\r\n        cineplex3.setRoom(cinema3);\r\n        \r\n        movie1 = new Movie(movieTitle,director,cast,synopsis,Status.NOW_SHOWING\r\n        ,TypeOfMovie.BLOCKBUSTER_2D,movieDurationMin,AgeOfMovieGoer.STUDENT);\r\n        movie2 = new Movie(movieTitle,director,cast,synopsis,Status.COMING_SOON\r\n        ,TypeOfMovie.BLOCKBUSTER_2D, movieDurationMin,AgeOfMovieGoer.STUDENT);\r\n        movie3 = new Movie(movieTitle,director,cast,synopsis,Status.NOW_SHOWING\r\n        ,TypeOfMovie.BLOCKBUSTER_3D,movieDurationMin,AgeOfMovieGoer.ADULT);\r\n        movie4 = new Movie(movieTitle,director,cast,synopsis,Status.PREVIEW\r\n        ,TypeOfMovie.REGULAR_2D,movieDurationMin,AgeOfMovieGoer.CHILD);\r\n\r\n        cineplex3.addMovie(movie1);\r\n        cineplex3.addMovie(movie2);\r\n        cineplex3.addMovie(movie3);\r\n        cineplex3.addMovie(movie4);\r\n\r\n        ///////////////////// adding to cineplexlist\r\n        cineplexList.add(cineplex1);\r\n        cineplexList.add(cineplex2);\r\n        cineplexList.add(cineplex3);\r\n        \r\n        return cineplexList;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdminModule/cineplexDB.java b/src/main/java/AdminModule/cineplexDB.java
--- a/src/main/java/AdminModule/cineplexDB.java	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ b/src/main/java/AdminModule/cineplexDB.java	(date 1668079770325)
@@ -119,7 +119,7 @@
         ArrayList<String> cast;
         String synopsis;
         int movieDurationMin;
-        TimeSlot timeslot1,timeslot2,timeslot3,timeslot4;
+        TimeSlot timeslot1,timeslot2,timeslot3,timeslot4,timeslot5;
         
 
         ///////////////////////////// Cineplex 1
@@ -171,7 +171,7 @@
                 
         //timeslot1
         tempCinema =  new Cinema("AMK_001",ClassOfCinema.REGULAR);
-        timeslot1 = new TimeSlot("11/12/2022","1600",tempCinema
+        timeslot1 = new TimeSlot("18/11/2022","1600",tempCinema
             ,movie1.getTitle(),movie1.getMovieDurationMin(),movie1.getType());
 
         //timeslot2
@@ -187,14 +187,20 @@
 
         //timeslot4
         tempCinema = new Cinema("AMK_001",ClassOfCinema.REGULAR);
-        timeslot4 = new TimeSlot("14/12/2022","2000",tempCinema
+        timeslot4 = new TimeSlot("14/11/2022","2000",tempCinema
             ,movie4.getTitle(),movie4.getMovieDurationMin(),movie4.getType());
 
+        //timeslot5
+        tempCinema =  new Cinema("AMK_001",ClassOfCinema.REGULAR);
+        timeslot5 = new TimeSlot("18/11/2022","1200",tempCinema
+                ,movie1.getTitle(),movie1.getMovieDurationMin(),movie1.getType());
+
         //settings
         movie1.addSlot(timeslot1);
         movie2.addSlot(timeslot2);
         movie3.addSlot(timeslot3);
         movie4.addSlot(timeslot4);
+        movie1.addSlot(timeslot5);
         cineplex1.addMovie(movie1);
         cineplex1.addMovie(movie2);
         cineplex1.addMovie(movie3);
Index: src/main/java/MoblimaApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.*;\r\nimport java.time.DayOfWeek;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.LinkedHashMap;\r\nimport java.util.Map;\r\nimport java.util.Scanner;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\nimport MovieGoerModule.*;\r\nimport AdminModule.*;\r\nimport static AdminModule.configureSettings.getPricelistFromFile;\r\n\r\npublic class MoblimaApp {\r\n    private final static String ACCOUNT_FILE_NAME = \"AccountList.txt\";\r\n    private final static String GUEST_TRANSACTION_FILE_NAME = \"guestTransaction.txt\";\r\n    private static Scanner sc = new Scanner(System.in);\r\n    private static Role currentRole;\r\n    private static boolean isLogined = false;\r\n    private static boolean isGuest = false;\r\n    private static int currentMGIndex = -1;\r\n    // private static String[] holidays = { \"01/01/2022\", \"01/02/2022\", \"02/02/2022\", \"15/04/2022\", \"01/05/2022\", \"03/05/2022\",\r\n    // \"15/05/2022\", \"10/07/2022\", \"09/08/2022\", \"24/10/2022\", \"25/12/2022\" };\r\n    private static ArrayList<Holiday> holidayList;\r\n    private static DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"uuuu/MM/dd HH:mm:ss\");\r\n    private static DateTimeFormatter df = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");\r\n\r\n    public static void main(String[] args) throws ClassNotFoundException, IOException{\r\n        holidayList   = holidayTextDB.readHolidays();\r\n        int loginOption;\r\n\r\n        generateDummyData();\r\n        printAccountLists();\r\n        do{\r\n            System.out.println(\"    MoblimaApp    \");\r\n            System.out.println(\"********************\");\r\n            System.out.println(\"1. Login into Account\");\r\n            System.out.println(\"2. Continue as guest\");\r\n            System.out.println(\"3. Exit\");\r\n            System.out.println(\"********************\");\r\n            loginOption = sc.nextInt();\r\n            sc.nextLine();\r\n\r\n            switch(loginOption){\r\n                case 1:\r\n                    switch_case_login();\r\n                    break;\r\n                case 2:\r\n                    isGuest = true;\r\n                    switch_case_moviegoer();\r\n                    break;\r\n                default:\r\n                    break;\r\n            } \r\n        }while(loginOption != 3);\r\n\r\n        sc.close();\r\n    }\r\n\r\n    public static ArrayList<Object> getAccountListsFromFile() throws IOException, ClassNotFoundException {\r\n        ArrayList<Object> accountLists = new ArrayList<Object>();\r\n        ArrayList<Object> staffList = new ArrayList<Object>();\r\n        ArrayList<Object> mgList = new ArrayList<Object>();;\r\n        accountLists.add(staffList);\r\n        accountLists.add(mgList);\r\n               \r\n        try {\r\n            FileInputStream fileInputStream2 = new FileInputStream(ACCOUNT_FILE_NAME);\r\n            ObjectInputStream objectInputStream2 = new ObjectInputStream(fileInputStream2);\r\n            accountLists = (ArrayList<Object>) objectInputStream2.readObject();\r\n            objectInputStream2.close();\r\n            System.out.println(\"Account Lists retrieved from File\");\r\n\r\n        } catch (FileNotFoundException e) {\r\n            FileOutputStream fileOutputStream = new FileOutputStream(ACCOUNT_FILE_NAME);\r\n            ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);\r\n            objectOutputStream.writeObject(accountLists);\r\n            objectOutputStream.flush();\r\n            objectOutputStream.close();\r\n            System.out.println(\"Account List File not found, creating new Account List File\");\r\n        }\r\n\r\n        return accountLists;\r\n    }\r\n\r\n    public static void addAccountListsToFile(ArrayList<Object> accountLists) throws IOException {\r\n            FileOutputStream fileOutputStream = new FileOutputStream(ACCOUNT_FILE_NAME);\r\n            ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);\r\n            objectOutputStream.writeObject(accountLists);\r\n            objectOutputStream.flush();\r\n            objectOutputStream.close();\r\n            System.out.printf(\"Account Lists added to File\\n\");\r\n    }\r\n\r\n    public static boolean isUsernameExist(ArrayList<Object> accountLists,String username){\r\n        ArrayList<Staff> staffList = (ArrayList<Staff>)accountLists.get(0);\r\n        ArrayList<MovieGoer> mgList = (ArrayList<MovieGoer>)accountLists.get(1);\r\n\r\n        for (Staff s : staffList) {\r\n            if (s.getUsername().equals(username)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        for (MovieGoer mg : mgList) {\r\n            if (mg.getUsername().equals(username)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private static int getMGIndex(ArrayList<MovieGoer> mgList, String username){\r\n        for(int i = 0; i < mgList.size(); i++){\r\n            if(mgList.get(i).getUsername().equals(username)){\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private static void generateDummyData() throws ClassNotFoundException, IOException{\r\n        ArrayList<Object> accountLists = getAccountListsFromFile();\r\n        ArrayList<Staff> staffList = (ArrayList<Staff>)accountLists.get(0);\r\n        ArrayList<MovieGoer> mgList = (ArrayList<MovieGoer>)accountLists.get(1);\r\n        Staff staff1;\r\n        MovieGoer mg1;\r\n\r\n        \r\n        staff1 = new Staff(\"admin\", \"admin123\");\r\n        if(!isUsernameExist(accountLists, staff1.getUsername())){\r\n            staffList.add(staff1);\r\n        }\r\n\r\n        mg1 = new MovieGoer(\"user1\", \"user123\", \"Adams\",95463461,\"adamsOKorNot@gmail.com\");\r\n        mg1.setAge(19);\r\n        if(!isUsernameExist(accountLists, mg1.getUsername())){            \r\n            mgList.add(mg1);\r\n        }\r\n\r\n        mg1 = new MovieGoer(\"user2\",\"user234\",\"John\",94352423,\"johnIsOk@gmail.com\");\r\n        mg1.setAge(31);\r\n        if(!isUsernameExist(accountLists, mg1.getUsername())){\r\n            mgList.add(mg1);\r\n        }\r\n\r\n        accountLists.set(0,staffList); \r\n        accountLists.set(1,mgList);\r\n        addAccountListsToFile(accountLists);\r\n    }\r\n\r\n    private static void printAccountLists() throws ClassNotFoundException, IOException{\r\n        ArrayList<Object> accountLists = getAccountListsFromFile();\r\n        ArrayList<Staff> staffList = (ArrayList<Staff>)accountLists.get(0);\r\n        ArrayList<MovieGoer> mgList = (ArrayList<MovieGoer>)accountLists.get(1);\r\n\r\n        System.out.println(\"Printing out Staff List\");\r\n        for(Staff s : staffList){\r\n            System.out.printf(\"username: %s ,password: %s ,role: %s\\n\",s.getUsername(),s.getPassword(),s.getRole());\r\n        }\r\n        System.out.println(\"\");\r\n        System.out.println(\"Printing out MovieGoer List\");\r\n        for(MovieGoer mg : mgList){\r\n            System.out.printf(\"username: %s ,password: %s ,role: %s\\n\",mg.getUsername(),mg.getPassword(),mg.getRole());\r\n            System.out.printf(\"name: %s ,email: %s ,mobile: %s\\n\",mg.getName(),mg.getEmail(),mg.getMobile());\r\n            System.out.printf(\"age: %s\\n\", String.valueOf(mg.getAge()) );\r\n            System.out.printf(\"Transaction List: %s \\n\",mg.getTransactionHistory());\r\n        }\r\n        \r\n    }\r\n\r\n    public static boolean login(ArrayList<Object> accountLists, String username, String password) {\r\n        ArrayList<Staff> staffList = (ArrayList<Staff>)accountLists.get(0);\r\n        ArrayList<MovieGoer> mgList = (ArrayList<MovieGoer>)accountLists.get(1);\r\n\r\n        for (Staff s : staffList) {\r\n            if (s.getUsername().equals(username)\r\n                    && s.getPassword().equals(password)) {\r\n                System.out.println(\"Login Success\");\r\n                System.out.println();\r\n                currentRole = Role.ADMIN;\r\n                isLogined = true;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        for (MovieGoer mg : mgList) {\r\n            if (mg.getUsername().equals(username)\r\n                    && mg.getPassword().equals(password)) {\r\n                System.out.println(\"Login Success\");\r\n                System.out.println();\r\n                currentMGIndex = getMGIndex(mgList,username);\r\n                currentRole = Role.MOVIEGOER;\r\n                isLogined = true;\r\n                return true;\r\n            }\r\n        }\r\n        \r\n\r\n        System.out.println(\"Incorrect Username or Password\");\r\n        System.out.println();\r\n        return false;\r\n    }\r\n\r\n\r\n    public static ArrayList<Transaction> getTransListFromFile() throws IOException, ClassNotFoundException{\r\n        ArrayList<Transaction> transList = new ArrayList<Transaction>();\r\n    \r\n        try{\r\n            FileInputStream fileInputStream2 = new FileInputStream(GUEST_TRANSACTION_FILE_NAME);\r\n            ObjectInputStream objectInputStream2 = new ObjectInputStream(fileInputStream2);\r\n            transList = (ArrayList<Transaction>) objectInputStream2.readObject();\r\n            objectInputStream2.close();\r\n            System.out.println(\"Guest Transaction List retrieved from File\");           \r\n        }catch(FileNotFoundException e){\r\n            FileOutputStream fileOutputStream = new FileOutputStream(GUEST_TRANSACTION_FILE_NAME);\r\n            ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);\r\n            objectOutputStream.writeObject(transList);\r\n            objectOutputStream.flush();\r\n            objectOutputStream.close();\r\n            System.out.println(\"Guest Transaction List File not found, creating new Guest Transaction List File\");           \r\n        }\r\n    \r\n        return transList;\r\n    }\r\n\r\n    public static void addTransListToFile(ArrayList<Transaction> transList) throws IOException {\r\n        FileOutputStream fileOutputStream = new FileOutputStream(GUEST_TRANSACTION_FILE_NAME);\r\n        ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);\r\n        objectOutputStream.writeObject(transList);\r\n        objectOutputStream.flush();\r\n        objectOutputStream.close();\r\n        System.out.printf(\"Guest Transaction List added to File\\n\");\r\n    }\r\n    \r\n    public static int getTransIndex(ArrayList<Transaction> transList, String transID){\r\n        String currentTransID = \"\";\r\n        for(int i = 0; i < transList.size(); i++){\r\n            currentTransID = transList.get(i).getId();\r\n           if(currentTransID.equals(transID)){\r\n                return i;\r\n           };\r\n        }\r\n        return -1;\r\n    }\r\n    \r\n    public static void printTransList() throws ClassNotFoundException, IOException{\r\n        ArrayList<Transaction> transList = getTransListFromFile();\r\n    \r\n        System.out.println();\r\n        System.out.println(\"Printing out Guest Transaction List\");\r\n        for(Transaction trans : transList){\r\n            System.out.printf(\"Transaction ID: %s\", trans.getId());\r\n            System.out.printf(\"Name: %s, Mobile: %d, Email: %s\", trans.getMgName(), trans.getMgMobile(), trans.getMgEmail());\r\n            System.out.printf(\"$ %.2f\",trans.getTotalPrice());\r\n            trans.printTickets();\r\n        }\r\n        System.out.printf(\"\\n\\n\");\r\n    \r\n    }\r\n\r\n    public static void switch_case_login() throws ClassNotFoundException, IOException{\r\n        String username;\r\n        String password;\r\n\r\n        System.out.println(\"Login\");\r\n        System.out.print(\"Username:\");\r\n        username = sc.nextLine();\r\n        System.out.print(\"Password:\");\r\n        password = sc.nextLine();\r\n        ArrayList<Object> accountLists = getAccountListsFromFile();\r\n\r\n        if(!login(accountLists,username,password)){\r\n            return;\r\n        }\r\n\r\n        if(currentRole == Role.ADMIN){\r\n            switch_case_admin();\r\n        }else{\r\n            switch_case_moviegoer();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private static void switch_case_admin() throws ClassNotFoundException, IOException{\r\n        int choice;\r\n        Scanner sc = new Scanner(System.in);\r\n        do{\r\n            System.out.println(\"********************\");\r\n            System.out.println(\"Admin Module\");\r\n            System.out.println(\"What would you like to do?\");\r\n            System.out.println(\"1: Add a new movie\");\r\n            System.out.println(\"2: Update an existing movie\");\r\n            System.out.println(\"3: Delete a movie\");\r\n            System.out.println(\"4: Configure system settings\");\r\n            System.out.println(\"5: View movies\");\r\n            System.out.println(\"6: View Top 5 Movies\");\r\n            System.out.println(\"7: Log Out\");\r\n            System.out.println(\"********************\");\r\n            choice = sc.nextInt();\r\n            sc.nextLine(); //clear buffer\r\n\r\n            switch(choice){\r\n                case 1:\r\n                    //add movie\r\n                    createMovie.create();\r\n                    break;\r\n\r\n                case 2:\r\n                    //update movie\r\n                    updateMovie.update();\r\n                    break;\r\n\r\n                case 3:\r\n                    //delete movie\r\n                    deleteMovie.delete();\r\n                    break;\r\n\r\n                case 4:\r\n                    //configure settings (change ticket prices, holidays, movie type)\r\n                    configureSettings.configure();\r\n                    break;\r\n\r\n                case 5:\r\n                    //view all movies\r\n                    MovieDB.printMovieList();\r\n                    break;\r\n\r\n                case 6:\r\n                    //view top\r\n                    viewTop.top5(isLogined,currentRole);\r\n                    break;\r\n\r\n                case 7:\r\n                    //log out\r\n                    isLogined = false;\r\n                    System.out.println(\"Logged Out Successfully!\");\r\n                    break;\r\n\r\n                default:\r\n                // System.out.println(\"testing case for now...\");\r\n                // printTransList();\r\n                // ArrayList<Cineplex> ccineList = cineplexDB.getCineplexListFromFile();\r\n                // ArrayList<Transaction> tLists = getTransListFromFile();\r\n                // ArrayList<Object> aLists = getAccountListsFromFile();\r\n                // ArrayList<Movie> mmLists = MovieDB.getMovieListFromFile();\r\n                // ArrayList<Object> ppriceList = configureSettings.getPricelistFromFile();\r\n                // LinkedHashMap<String,Boolean> vt5settings = configureSettings.getViewTop5SettingsFromFile();\r\n                // System.out.println(\"end of testing case...\");\r\n\r\n                    break;\r\n            }\r\n            \r\n        } while(choice != 7);\r\n        \r\n    }\r\n\r\n    private static void switch_case_moviegoer() throws ClassNotFoundException, IOException{\r\n        ArrayList<Cineplex> cathay;\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        int option = 0, cinema = 0, choice = 0, Qty = 0;\r\n        float time;\r\n        String key, datetime, movie, seatdesc;\r\n        Cineplex cinename;\r\n        ArrayList<Movie> movieList;\r\n        Scanner s = new Scanner(System.in);\r\n        do {\r\n            cathay  = cineplexDB.getCineplexListFromFile();\r\n\r\n            System.out.println(\"********************\");\r\n            System.out.println(\"Movie Goer Module\");\r\n            System.out.println(\"1. Search/List movie\");\r\n            System.out.println(\"2. View Movie details\");\r\n            System.out.println(\"3. Seat Availability and Booking\");\r\n            System.out.println(\"4. Book a ticket\");\r\n            System.out.println(\"5. View Booking History\");\r\n            System.out.println(\"6. List Top 5 Movies by sales OR by overall ratings\");\r\n    \r\n            System.out.println(\"7. Give a movie review\");\r\n            if(isLogined){\r\n                System.out.println(\"8. Log out\");\r\n            }else{\r\n                System.out.println(\"8. End Guest Session\");\r\n            }\r\n            System.out.println(\"********************\");\r\n\r\n            System.out.println(\"Enter Option\");\r\n            option = sc.nextInt();\r\n            //clear buffer\r\n            sc.nextLine();\r\n\r\n            switch (option) {\r\n                case 1:\r\n                    System.out.println(\"1. Search/List movie\");\r\n                   \r\n                    movieList = getMovieList(cathay,sc);\r\n                    do {\r\n                        boolean isNotFound = true;\r\n                        System.out.println(\"1. Search movie\");\r\n                        System.out.println(\"2. List movie\");\r\n                        System.out.println(\"3. Exit\");\r\n                        System.out.println(\"Enter a choice\");\r\n                        choice = sc.nextInt();\r\n                         //clear buffer\r\n                         sc.nextLine();\r\n\r\n                        switch (choice) {\r\n                            case 1:\r\n                                System.out.println(\"Search by keyword: \");\r\n                                key = s.nextLine();\r\n                                System.out.println(\"Movie search results:\");\r\n                                for (int j = 0; j < movieList.size(); j++) {\r\n                                    if (movieList.get(j).getTitle().toLowerCase().indexOf(key.toLowerCase()) != -1) {\r\n                                        System.out.println(j + \". \" + movieList.get(j).getTitle());\r\n                                        isNotFound = false;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            \r\n                            case 2:\r\n                                System.out.println(\"Movie lists:\");\r\n                                for (int j = 0; j < movieList.size(); j++) {\r\n                                    System.out.println(j + \". \" + movieList.get(j).getTitle()+\" \"+ movieList.get(j).getType()+\" \"+ movieList.get(j).getStatus()+\" Duration:\"+ movieList.get(j).getMovieDurationMin()+\" Age restriction:\"+  movieList.get(j).getAge_restriction());\r\n                                    isNotFound = false;\r\n                                }\r\n                                break;\r\n                            case 3:\r\n                                System.out.println(\"Exiting Search/List movie...\");\r\n                                break;\r\n\r\n                            default:\r\n                                break;\r\n                        }\r\n                        \r\n                        if(isNotFound  && (choice == 1 || choice == 2)){\r\n                            System.out.println(\"No result found\");\r\n                        }\r\n                        System.out.println(\"\");                        \r\n                    } while (choice != 3);\r\n\r\n                    break;\r\n                case 2:\r\n                    System.out.println(\"2. View Movie details\");\r\n                    \r\n                    movieList = getMovieList(cathay,sc);\r\n                    if(movieList.size() < 1){\r\n                        System.out.println(\"No movie available.\");\r\n                        break;\r\n                    }\r\n\r\n                    for (int i = 0; i < movieList.size(); i++) {\r\n                        System.out.println(i + \" Movie \" + movieList.get(i).getTitle()+\" \"+ movieList.get(i).getStatus()+\" \"\r\n                            +movieList.get(i).getType()+\" \"+movieList.get(i).getAge_restriction());\r\n                    }\r\n                    System.out.println(\"Select movie to view details\");\r\n                    choice = sc.nextInt();\r\n                    if(choice>=movieList.size()){\r\n                        System.out.println(\"Please Choose appropriate Movie!\");\r\n                        break;\r\n                    }\r\n                    System.out.println(\"Movie Details : \");\r\n                    System.out.println(\"Movie Title: \" + movieList.get(choice).getTitle());\r\n                    System.out.println(\"Movie Status: \" + movieList.get(choice).getStatus());\r\n                    System.out.println(\"Movie Duration: \"+ movieList.get(choice).getMovieDurationMin()+ \" minutes\");\r\n                    System.out.println(\"Movie Age Requirement: \"+ movieList.get(choice).getAge_restriction());\r\n                    System.out.println(\"Movie Type: \"+ movieList.get(choice).getType());\r\n                    // System.out.println(\"Movie Rating: \" + movieList.get(choice).getRating());\r\n                    System.out.println(\"Movie Director: \" + movieList.get(choice).getDirector());\r\n                    System.out.println(\"Movie Synopsis: \" + movieList.get(choice).getSynopsis());\r\n                    System.out.println(\"Movie Airing time: \");\r\n                    ArrayList<TimeSlot> showair = movieList.get(choice).getTimeSlots();\r\n                    for(int i=0; i<showair.size(); i++){\r\n                        System.out.println(showair.get(i).getairingtimeformat()+\" \"+showair.get(i).getRoom().getCinemaClass());\r\n                    }\r\n                    // System.out.println(\"Movie Review: \");\r\n                    // ArrayList<Review> showreview = movieList.get(choice).getreviewlist();\r\n                    // for(int i=0; i<showreview.size(); i++){\r\n                    //     System.out.println(\"Comment: \"+i+\" \"+showreview.get(i).getRemark());\r\n                    // }\r\n                    System.out.println(\"\");\r\n                    break;\r\n\r\n                case 3:\r\n                    ArrayList<String> dateList = new ArrayList<String>();\r\n                    ArrayList<TimeSlot> slotList = new ArrayList<TimeSlot>();\r\n                    ArrayList<TimeSlot> slotList2 = new ArrayList<TimeSlot>();\r\n                    String dateSelection = \"\";\r\n                    TimeSlot slotSelected;\r\n\r\n                    System.out.println(\"3. Seat Availability and Booking\");\r\n                    System.out.println(\"Cineplex List:\");\r\n                    for (int i = 0; i < cathay.size(); i++) {\r\n                        System.out.println(i + \". \" + cathay.get(i).getName());\r\n                    }\r\n                    System.out.println(\"Select one of the cineplex index\");\r\n                    cinema = sc.nextInt();\r\n                    if (cinema >= cathay.size()) {\r\n                        System.out.println(\"Please Choose appropriate Cinema!\");\r\n                        break;\r\n                    }\r\n                    cinename = cathay.get(cinema);\r\n                    // if (cinename.getTimeslots().size() == 0) {\r\n                    // System.out.println(\"No Movie is airing in this cineplex\");\r\n                    // break;\r\n                    // }\r\n                    if(cinename.getMovieList().size() < 1){\r\n                        System.out.println(\"No movie available\");\r\n                        break;\r\n                    }\r\n                    System.out.println(\"Which movie :\");\r\n\r\n                    for (int i = 0; i < cinename.getMovieList().size(); i++) {\r\n                        System.out.println(i + \" \" + cinename.getMovieList().get(i).getTitle());\r\n                    }\r\n                    int movieSelection = sc.nextInt();\r\n                    if (movieSelection >= cinename.getMovieList().size()) {\r\n                        System.out.println(\"Please Choose appropriate Movie!\");\r\n                        break;\r\n                    }\r\n                    slotList = cinename.getMovieList().get(movieSelection).getTimeSlots();\r\n\r\n                    if (slotList.size() == 0) {\r\n                        System.out.println(\"No date Available\");\r\n                    } else {\r\n                        System.out.println(\"Select a date\");\r\n                        String firstDate = slotList.get(0).getStringDate();\r\n                        System.out.println(0 + \" \" + slotList.get(0).getStringDate());\r\n                        dateList.add(firstDate);\r\n                        for (int i = 1; i < slotList.size(); i++) {\r\n                            if (slotList.get(i - 1).getStringDate() != slotList.get(i).getStringDate()) {\r\n                                dateList.add(slotList.get(i).getStringDate());\r\n                                System.out.println(i + \" \" + slotList.get(i).getStringDate());\r\n                            }\r\n                        }\r\n\r\n                        int input = sc.nextInt();\r\n                        if (input >= dateList.size()) {\r\n                            System.out.println(\"Please Choose appropriate Date!\");\r\n                            break;\r\n                        }\r\n                        dateSelection = dateList.get(input);\r\n                    }\r\n\r\n                    System.out.println(\"Select Timeslot\");\r\n                    for (int i = 0; i < slotList.size(); i++) {\r\n                        if (slotList.get(i).getStringDate() == dateSelection) {\r\n                            slotList2.add(slotList.get(i));\r\n                        }\r\n                    }\r\n                    for (int i = 0; i < slotList2.size(); i++) {\r\n                        System.out.println(\r\n                                i + \" \" + slotList2.get(i).getStartTime() + \"-\" +\r\n                                        slotList2.get(i).getEndTime());\r\n                    }\r\n\r\n                    int inputSlot = sc.nextInt();\r\n                    if (inputSlot >= slotList2.size()) {\r\n                        System.out.println(\"Please Choose appropriate TimeSlot!\");\r\n                        break;\r\n                    }\r\n                    slotSelected = slotList2.get(inputSlot);\r\n                    slotSelected.getRoom().printSeats();\r\n\r\n                    seatdesc = slotSelected.getRoom().getseattypedesc();\r\n                    String couples = seatdesc.substring(0,seatdesc.indexOf(\"Elite\"));\r\n                    String elite = seatdesc.substring(seatdesc.indexOf(\"Elite\"),seatdesc.indexOf(\"Ulti\"));\r\n                    String ulti = seatdesc.substring(seatdesc.indexOf(\"Ulti\"));\r\n                    System.out.println(couples);\r\n                    System.out.println(elite);\r\n                    System.out.println(ulti);\r\n\r\n                    break;\r\n                case 4:\r\n                    switch_case_4(cathay);\r\n\r\n                    break;\r\n\r\n                case 5:\r\n                    if(isLogined){\r\n                        ArrayList<Object> accountLists = getAccountListsFromFile();\r\n                        ArrayList<MovieGoer> mgList = (ArrayList<MovieGoer>)accountLists.get(1);\r\n                        MovieGoer man = mgList.get(currentMGIndex);\r\n                        ArrayList<Transaction> temptrans = man.getTransactionHistory();\r\n\r\n                        System.out.println(\"Here is your Transaction :\");\r\n                        if(temptrans.size() < 1){\r\n                            System.out.println(\"No past transactions found.\");\r\n                            break;\r\n                        }\r\n                        for(int i=0;i<temptrans.size();i++){\r\n                            System.out.println(\"Transaction \"+temptrans.get(i).getId());\r\n                            temptrans.get(i).printTickets();\r\n                        }\r\n                    }\r\n\r\n                    if(isGuest){\r\n                        ArrayList<Transaction> transList = getTransListFromFile();\r\n                        String transID;\r\n                        Boolean isFound = false;\r\n\r\n                        System.out.println(\"Please enter your transaction id\");\r\n                        transID = sc.nextLine();\r\n            \r\n                        System.out.println(\"Here is your Transaction :\");\r\n                        for(Transaction trans : transList){\r\n                            if(trans.getId().equals(transID)){\r\n                                System.out.println(\"Transaction \"+trans.getId());\r\n                                trans.printTickets();\r\n                                isFound = true;\r\n                                break;\r\n                            }\r\n                        }     \r\n                        if(!isFound){\r\n                            System.out.println(\"No transaction found\");\r\n                        }\r\n                         \r\n                    }\r\n\r\n                    break;\r\n\r\n                case 6:\r\n                    System.out.println(\"6. List Top 5 Movies by sales OR by overall ratings\");\r\n                    viewTop.top5(isLogined,currentRole);\r\n                    break;\r\n\r\n                case 7:\r\n                    movieList = MovieDB.getMovieListFromFile();\r\n                    int i;\r\n                    int choose = -1;\r\n                    int rating = -1;\r\n\r\n                    System.out.println(\"7. Give a movie review\");\r\n                    System.out.println(\"List of all current movie with rating\");\r\n                    if(movieList.size() < 1){\r\n                        System.out.println(\"No movie available\");\r\n                    }\r\n                    for (i= 0; i < movieList.size(); i++) {\r\n                        System.out.println(\r\n                                i + \" Movie \" + movieList.get(i).getTitle() + \" current rating \" + movieList.get(i).getRating()\r\n                                        + \" number of reviewer: \" + movieList.get(i).getnumberofreviewer());\r\n                    }\r\n                    //movie choice\r\n                    do {\r\n                        System.out.println(\"Choose a movie\");\r\n                        choose = sc.nextInt();\r\n                    } while (choose < 0 || choose > i);\r\n                    //rating choice\r\n                    do {\r\n                        System.out.println(\"Give a rating from 1-5\");\r\n                        rating = sc.nextInt();                       \r\n                    } while (rating < 1 || rating > 5);\r\n\r\n                    sc = new Scanner(System.in);\r\n                    System.out.println(\"Give a review\");\r\n                    String review = sc.nextLine();\r\n\r\n                    Review rv = new Review(rating, review);\r\n                    movieList.get(choose).addReview(rv);\r\n                    ArrayList<Review> reviewlist = movieList.get(choose).getreviewlist();\r\n                    movieList.get(choose).updatereviewscore(reviewlist);\r\n\r\n                    //update review and rating into movie.txt\r\n                    MovieDB.addMovieListToFile(movieList);\r\n                    System.out.println(\"Thank you for the review.\");\r\n\r\n                    break;\r\n\r\n                case 8:\r\n                    if(isLogined){\r\n                        currentMGIndex= -1;\r\n                        isLogined = false;\r\n                        System.out.println(\"Logged Out Successfully!\");\r\n                    }\r\n\r\n                    if(isGuest){\r\n                        isGuest = false;\r\n                        System.out.println(\"Guest Session Ended\");\r\n                    }\r\n                    break;\r\n                    \r\n                default:\r\n                    System.out.println(\"testing case for now...\");\r\n                    printTransList();\r\n                    ArrayList<Cineplex> ccineList = cineplexDB.getCineplexListFromFile();\r\n                    ArrayList<Transaction> tLists = getTransListFromFile();\r\n                    ArrayList<Object> aLists = getAccountListsFromFile();\r\n                    ArrayList<Movie> mmLists = MovieDB.getMovieListFromFile();\r\n                    ArrayList<Object> ppriceList = configureSettings.getPricelistFromFile();\r\n                    LinkedHashMap<String,Boolean> vt5settings = configureSettings.getViewTop5SettingsFromFile();\r\n                    System.out.println(\"end of testing case...\");\r\n                    break;\r\n            }\r\n\r\n        } while (isLogined || isGuest);\r\n\r\n    }\r\n\r\n\r\n    private static ArrayList<Movie> getMovieList(ArrayList<Cineplex> cathay, Scanner sc){\r\n        int i = 0;\r\n        int index = -1;\r\n        ArrayList<Movie> movieList;\r\n\r\n        System.out.println(\"Cineplex List:\");\r\n        for(Cineplex cineplex :cathay){\r\n            System.out.printf(\"%s. %s\\n\",i,cineplex.getName());\r\n            i++;\r\n        }\r\n        \r\n        do {\r\n            System.out.println(\"Select one of the cineplex index\");\r\n            index = sc.nextInt();\r\n        } while (index < 0 || index > cathay.size()-1);\r\n       \r\n\r\n       return movieList = cathay.get(index).getMovieList();\r\n    }\r\n\r\n\r\n    private static void switch_case_4(ArrayList<Cineplex> cathay) throws ClassNotFoundException, IOException{\r\n        LocalDateTime now = LocalDateTime.now();\r\n        ArrayList<String> datel = new ArrayList<String>();\r\n        String dateS = \"\", seatdesc, mgName = \"\", mgEmail = \"\";\r\n        int j = 0, choice = 0, Qty = 0, ageChoice = 0;\r\n        int mgMobile = 0;\r\n        int index = -1;\r\n        AgeOfMovieGoer guestAge = AgeOfMovieGoer.CHILD;\r\n        //account db\r\n        ArrayList<Object> accountLists = getAccountListsFromFile();\r\n        ArrayList<MovieGoer> mgList = (ArrayList<MovieGoer>)accountLists.get(1);\r\n        MovieGoer mg = new MovieGoer(mgName, mgEmail);\r\n        if(currentMGIndex != -1){\r\n            mg = mgList.get(currentMGIndex);\r\n        }\r\n         \r\n        //movie db\r\n        ArrayList<Movie> globalMovieList = MovieDB.getMovieListFromFile();\r\n        int globalMovieIndex;\r\n        Movie globalMovie;\r\n        //cineplex db\r\n        Cineplex cine = null;\r\n        int cineIndex;\r\n        ArrayList<Movie> movieList;\r\n        Movie movie;\r\n        int localMovieIndex;\r\n        String movieTitle;\r\n        ArrayList<TimeSlot> ts1 = null;\r\n        TimeSlot tss = null;\r\n        //guest Transaction db\r\n        ArrayList<Transaction> transList = getTransListFromFile();\r\n        \r\n        System.out.println(\"4. Book a ticket\");\r\n        System.out.println(\"Cineplex List:\");\r\n        for(Cineplex cineplex :cathay){\r\n            System.out.printf(\"%s. %s\\n\",j,cineplex.getName());\r\n            j++;\r\n        }\r\n        do {\r\n            System.out.println(\"Select one of the cineplex index\");\r\n            index = sc.nextInt();\r\n        } while (index < 0 || index > cathay.size()-1);\r\n        cine = cathay.get(index);\r\n        cineIndex = index;\r\n        movieList = cine.getMovieList();\r\n\r\n        if(movieList.size()==0){\r\n            System.out.println(\"No Movie is airing in this cineplex\");\r\n            return;\r\n        }\r\n\r\n        System.out.println(\"Which movie :\");\r\n        for (int i = 0; i < movieList.size(); i++) {\r\n            if( (movieList.get(i).getStatus() == Status.NOW_SHOWING || movieList.get(i).getStatus() == Status.PREVIEW) ){\r\n                System.out.println(i + \" \" + movieList.get(i).getTitle() + \" \" + movieList.get(i).getStatus() );\r\n            }\r\n        }\r\n        int moviechoice = sc.nextInt();\r\n        if(moviechoice >= movieList.size()){\r\n            System.out.println(\"Please Choose appropriate Movie!\");\r\n            return;\r\n        }\r\n        movie = movieList.get(moviechoice);\r\n        ts1 = movie.getTimeSlots();\r\n        movieTitle = movie.getTitle();\r\n        //Age requirement check\r\n        if (isLogined &&  mg.getAgetype().ordinal() < movie.getAge_restriction().ordinal() ) {\r\n            System.out.println(\"Age requirement required to watch \" + movie.getAge_restriction() + \" Movie\");\r\n            return;\r\n        }\r\n\r\n        if(isGuest){\r\n            do {\r\n                System.out.println(\"Age List\");\r\n                System.out.println(\"1. CHILD\");\r\n                System.out.println(\"2. STUDENT\");\r\n                System.out.println(\"3. SENIOR\");\r\n                System.out.println(\"4. ADULT\");   \r\n                System.out.println(\"Select your age\");\r\n                ageChoice = sc.nextInt();\r\n    \r\n                switch (ageChoice) {\r\n                    case 1:\r\n                        guestAge = AgeOfMovieGoer.CHILD;\r\n                        break;\r\n    \r\n                    case 2:\r\n                        guestAge = AgeOfMovieGoer.STUDENT;\r\n                        break;\r\n                \r\n                    case 3:\r\n                        guestAge = AgeOfMovieGoer.SENIOR;\r\n                        break;\r\n    \r\n                    case 4:\r\n                        guestAge = AgeOfMovieGoer.ADULT;\r\n                        break;               \r\n                    default:\r\n                        break;\r\n                }                \r\n            } while (ageChoice < 1 || ageChoice > 4);\r\n\r\n            if (guestAge.ordinal() < movie.getAge_restriction().ordinal() ) {\r\n                System.out.println(\"Age requirement required to watch \" + movie.getAge_restriction() + \" Movie\");\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n        //Check booking type\r\n        if(movie.getStatus() == Status.COMING_SOON || movie.getStatus() == Status.END_OF_SHOWING)\r\n        if (ts1.size() == 0) {\r\n            System.out.println(\"The movie is coming soon or not showing now\");\r\n            return;\r\n        }\r\n\r\n        System.out.println(\"Select a date\");\r\n        String firstDate = ts1.get(0).getStringDate();\r\n        System.out.println(0 + \" \" + ts1.get(0).getStringDate());\r\n        datel.add(firstDate);\r\n        for (int i = 1; i < ts1.size(); i++) {\r\n            if (ts1.get(i - 1).getStringDate() != ts1.get(i).getStringDate()) {\r\n                datel.add(ts1.get(i).getStringDate());\r\n                System.out.println(i + \" \" + ts1.get(i).getStringDate());\r\n            }\r\n        }\r\n\r\n        int input = sc.nextInt();\r\n        dateS = datel.get(input);\r\n\r\n\r\n        System.out.println(\"Select Timeslot\");\r\n        ArrayList<Integer> tsnum = new ArrayList<>();\r\n        int slot = 0;\r\n        for (int i = 0; i < ts1.size(); i++) {\r\n            if (ts1.get(i).getStringDate() == dateS) {\r\n                System.out.println(slot + \" \" + ts1.get(i).getStartTime() + \"-\" +ts1.get(i).getEndTime());\r\n                tsnum.add(i); slot++;\r\n            }\r\n        }\r\n        choice = sc.nextInt();\r\n\r\n        if (choice >= tsnum.size()) {\r\n            System.out.println(\"Please Choose appropriate timeslot!\");\r\n            return;\r\n        }\r\n        tss = ts1.get(tsnum.get(choice));\r\n        //System.out.println(\"selected \"+tsnum.get(choice));\r\n        //tss.getRoom().printSeats();\r\n\r\n\r\n        System.out.println(\"Select Qty: \");\r\n        Qty = sc.nextInt();\r\n        ArrayList<Integer> ticketagelist= new ArrayList<>();\r\n        for(int i=0;i<Qty;i++){\r\n            System.out.println(\"Selecting Age Category for Customer \"+i);\r\n            System.out.println(\"0 for CHILD\");\r\n            System.out.println(\"1 for STUDENT\");\r\n            System.out.println(\"2 for SENIOR\");\r\n            System.out.println(\"3 for ADULT\");\r\n            int age = sc.nextInt();\r\n            if( (age>3) || (age<0) || age<movie.getAge_restriction().ordinal() ){\r\n                Qty=-1;\r\n                break;\r\n            }\r\n            ticketagelist.add(age);\r\n        }\r\n        //clear buffer\r\n        sc.nextLine();\r\n        if(Qty == -1){\r\n            System.out.println(\"Age requirement required to watch \" + movie.getAge_restriction() + \" Movie\");\r\n            return;\r\n        }\r\n\r\n        LocalDate dt = LocalDate.parse(dateS, df);\r\n        Day d;\r\n        Integer starttime = Integer.parseInt( tss.getStartTime().substring(0,2) );\r\n        Integer endtime = Integer.parseInt( tss.getEndTime().substring(0,2) );\r\n        if (dt.getDayOfWeek() == DayOfWeek.MONDAY || dt.getDayOfWeek() == DayOfWeek.TUESDAY || dt.getDayOfWeek() == DayOfWeek.WEDNESDAY) {\r\n            d = Day.MON_TO_WED;\r\n        } else if (dt.getDayOfWeek() == DayOfWeek.FRIDAY && ( !(starttime <= 6 && 6 <= endtime) || (starttime>6) || (endtime<6)  ) ) {\r\n            d = Day.FRI_BEFORE_6;\r\n        } else if (dt.getDayOfWeek() == DayOfWeek.THURSDAY) {\r\n            d = Day.THURS;\r\n        }  else {\r\n            d = Day.REMAINING_DAYS;\r\n        }\r\n\r\n        for(int i=0; i<holidayList.size();i++){\r\n            String dateStr = holidayList.get(i).getDate();\r\n            if(dateStr.indexOf(dateS) > -1){\r\n                d = Day.HOLIDAY;\r\n            }\r\n        }\r\n\r\n        String transid = \"Cinema :\"+cine.getName()+\" Movie title :\"+movie.getTitle()+\" \"+tss.getairingtimeformat()+\" \"+d+\" \"+tss.getRoom().getCinemaClass()+\" \"+movie.getType();\r\n        System.out.println(transid);\r\n        seatdesc = tss.getRoom().getseattypedesc();\r\n        //System.out.println(\"Seatdesc : \"+seatdesc);\r\n        String couples1 = seatdesc.substring(0,seatdesc.indexOf(\"Elite\"));\r\n        String elite1 = seatdesc.substring(seatdesc.indexOf(\"Elite\"),seatdesc.indexOf(\"Ulti\"));\r\n        String ulti1 = seatdesc.substring(seatdesc.indexOf(\"Ulti\"));\r\n        movie.getTimeSlots().get(tsnum.get(choice)).getRoom().printSeats();\r\n        //Cinema c = movie.getTimeSlots().get(tsnum.get(choice)).getRoom();\r\n        System.out.println(couples1);\r\n        System.out.println(elite1);\r\n        System.out.println(ulti1);\r\n        ArrayList<Seattype> selectedseattype = new ArrayList<>();\r\n        System.out.println(\"Select Seats: (Example: A12, B9 )\");\r\n        for (int q = 0; q < Qty; q++) {\r\n            String selectseat = sc.nextLine();\r\n\r\n            int row = Integer.valueOf(selectseat.toLowerCase().substring(0, 1).charAt(0) - 96) - 1;\r\n            int col = Integer.parseInt(selectseat.substring(1)) - 1 ;\r\n            //System.out.println(\"Gettype : \"+tss.getRoom().getseattype(row,col)+\" \"+row+\" \"+col+tss.getRoom().checkseat(row, col));\r\n            if ((row<10) && (col<12) ) {\r\n                if(!tss.getRoom().checkseat(row, col)){\r\n                    if(tss.getRoom().getseattype(row,col).ordinal() != Seattype.SEAT.ordinal()){\r\n                        q = q + 1;\r\n                        if((q) >= Qty){\r\n                            System.out.println(\"Sorry the seat required 2 seaters. Choose again!\");\r\n                            q = q - 2;\r\n                        } else{\r\n                            tss.getRoom().book(row, col);\r\n                            selectedseattype.add(tss.getRoom().getseattype(row,col));\r\n                            selectedseattype.add(tss.getRoom().getseattype(row,col));\r\n                            System.out.println(\"Double seats selected!\");\r\n                        }\r\n                    }\r\n\r\n                    if(tss.getRoom().getseattype(row,col).ordinal() == Seattype.SEAT.ordinal()){\r\n                        tss.getRoom().book(row, col);\r\n                        selectedseattype.add(tss.getRoom().getseattype(row,col));\r\n                        System.out.println(\"Seat selected!\");\r\n                    }\r\n\r\n                }else{\r\n                    System.out.println(\"Sorry the seat is taken. Choose again!\");\r\n                    q = q - 1;\r\n                }\r\n            } else {\r\n                System.out.println(\"Sorry the seat is taken. Choose again!\");\r\n                q = q - 1;\r\n            }\r\n        }\r\n\r\n\r\n        //Ticket create part\r\n        Ticket[] t = new Ticket[Qty];\r\n        ArrayList<Object> priceLists = getPricelistFromFile();\r\n        //String ageprice = priceLists.get(0).toString();\r\n        LinkedHashMap<String,Double> ageList = (LinkedHashMap<String,Double>)priceLists.get(0);\r\n        LinkedHashMap<String,Double> seatTypeList = (LinkedHashMap<String,Double>)priceLists.get(1);\r\n        LinkedHashMap<String,Double> cinemaClassList = (LinkedHashMap<String,Double>)priceLists.get(2);\r\n        LinkedHashMap<String,Double> movieClassList = (LinkedHashMap<String,Double>)priceLists.get(3);\r\n        LinkedHashMap<String,Double> dayList = (LinkedHashMap<String,Double>)priceLists.get(4);\r\n\r\n        for(int i=0;i<Qty;i++){\r\n            double ticketprice = 0;\r\n            //Calculating price\r\n            for (Map.Entry<String, Double> age : ageList.entrySet()) {\r\n                String keys = age.getKey();\r\n                Double value = age.getValue();\r\n                //System.out.println(keys+\" \"+value+\" \"+ AgeOfMovieGoer.values()[ticketagelist.get(i)].toString());\r\n                if(keys.equals( AgeOfMovieGoer.values()[ticketagelist.get(i)].toString()) ){\r\n                    System.out.println(\"Calculating for \"+AgeOfMovieGoer.values()[ticketagelist.get(i)].toString());\r\n                    ticketprice += value;\r\n                }\r\n            }\r\n            for (Map.Entry<String, Double> seatType : seatTypeList.entrySet()) {\r\n                String keys = seatType.getKey();\r\n                Double value = seatType.getValue();\r\n                if(keys.equals( selectedseattype.get(i).toString() )){\r\n                    System.out.println(\"Calculating for \"+selectedseattype.get(i).toString());\r\n                    ticketprice += value;\r\n                }\r\n            }\r\n            for (Map.Entry<String, Double> cinemaClass : cinemaClassList.entrySet()) {\r\n                String keys = cinemaClass.getKey();\r\n                Double value = cinemaClass.getValue();\r\n                if(keys.equals( tss.getRoom().getCinemaClass().toString() )){\r\n                    System.out.println(\"Calculating for \"+tss.getRoom().getCinemaClass().toString());\r\n                    ticketprice += value;\r\n                }\r\n            }\r\n            for (Map.Entry<String, Double> movieClass : movieClassList.entrySet()) {\r\n                String keys = movieClass.getKey();\r\n                Double value = movieClass.getValue();\r\n                if(keys.equals( movie.getType().toString() )){\r\n                    System.out.println(\"Calculating for \"+movie.getType().toString());\r\n                    ticketprice += value;\r\n                }\r\n            }\r\n            for (Map.Entry<String, Double> day : dayList.entrySet()) {\r\n                String keys = day.getKey();\r\n                Double value = day.getValue();\r\n                //System.out.println(keys+\" \"+value+\" \"+ d.toString());\r\n                if(keys.equals( d.toString()) ){\r\n                    System.out.println(\"Calculating for \"+d.toString());\r\n                    ticketprice += value;\r\n                }\r\n            }\r\n            t[i] = new Ticket(1, AgeOfMovieGoer.values()[ticketagelist.get(i)] , movie.getType(), tss.getRoom().getCinemaClass(), d, selectedseattype.get(i), ticketprice);\r\n            //movie.addsales(ticketprice); //add to movie\r\n        }\r\n        //Transaction trans = new Transaction(dtf.format(now).toString() +\" \"+ transid, t);\r\n        if(isLogined){\r\n            mgName = mg.getName();\r\n            mgMobile = mg.getMobile();\r\n            mgEmail = mg.getEmail();\r\n        }\r\n\r\n        if(isGuest){\r\n            System.out.println(\"Enter your name:\");\r\n            mgName = sc.nextLine();\r\n            System.out.println(\"Enter your mobile:\");\r\n            mgMobile = sc.nextInt();\r\n            //clear buffer\r\n            sc.nextLine();\r\n            System.out.println(\"Enter your email:\");\r\n            mgEmail = sc.nextLine();\r\n        }\r\n        Transaction trans = new Transaction(dtf.format(now).toString() +\" \"+ transid,mgName,mgMobile,mgEmail,t);\r\n\r\n        if(isLogined){\r\n            //add transaction to account.txt\r\n                mg.addTransaction(trans);\r\n                //set mg to mgList\r\n                mgList.set(currentMGIndex,mg);\r\n                //set mgList to object.get(1) of account.txt\r\n                accountLists.set(1, mgList);\r\n                //saved object to account.txt\r\n                addAccountListsToFile(accountLists);\r\n        }\r\n\r\n        if(isGuest){\r\n            //add transaction to guestTransaction.txt\r\n                //add transaction to transactionList\r\n                transList.add(trans);\r\n                //add transactionList to file\r\n                addTransListToFile(transList);\r\n        }\r\n\r\n        //update time in cineplex.txt (local movie list inside cineplex)\r\n            //set timeslot to movie\r\n                int i = 0;\r\n                TimeSlot temp_ts;\r\n                for(i = 0; i < ts1.size(); i++){\r\n                    temp_ts = ts1.get(i);\r\n                    //since the timeslots arraylist is inside movie, which is inside of cineplex\r\n                    //we dont need to check movie and cineplex\r\n                    //and just check stringdate and starttime\r\n                    if(temp_ts.getStringDate().equals(tss.getStringDate()) \r\n                        && temp_ts.getStartTime().equals(tss.getStartTime())){\r\n                            break;\r\n                        }\r\n                }\r\n            movie.setTimeSlot(i,tss);\r\n            //set cineplex.setmovie\r\n            localMovieIndex = MovieDB.getMovieIndex(movieList, movieTitle);\r\n            cine.setMovie(localMovieIndex,movie);\r\n            //set cineplex to cineplex List\r\n            cathay.set(cineIndex,cine);\r\n            //add cineplex list to file\r\n            cineplexDB.addCineplexListToFile(cathay);\r\n\r\n        //update sales in movie.txt (global movie list)\r\n            globalMovieIndex = MovieDB.getMovieIndex(globalMovieList, movieTitle);\r\n            globalMovie = globalMovieList.get(globalMovieIndex);\r\n            //set sales in movie\r\n            globalMovie.addsales(trans.getTotalPrice());\r\n            //set movie to movielist\r\n            globalMovieList.set(globalMovieIndex,globalMovie);\r\n            //add movielist to file\r\n            MovieDB.addMovieListToFile(globalMovieList);\r\n\r\n        System.out.println(Qty + \" Booking places!\");\r\n        System.out.println(\"Printing out your transaction\\n\");\r\n        System.out.println(\"Transaction \"+trans.getId());\r\n        trans.printTickets();\r\n        System.out.printf(\"Total Price SGD %.2f inclusive of GST\\n\\n\",trans.getTotalPrice());\r\n    }\r\n\r\n\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MoblimaApp.java b/src/main/java/MoblimaApp.java
--- a/src/main/java/MoblimaApp.java	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ b/src/main/java/MoblimaApp.java	(date 1668079554752)
@@ -871,10 +871,11 @@
         //System.out.println("selected "+tsnum.get(choice));
         //tss.getRoom().printSeats();
 
-
         System.out.println("Select Qty: ");
         Qty = sc.nextInt();
         ArrayList<Integer> ticketagelist= new ArrayList<>();
+        int studentFB = 0;
+        int seniorFB = 0;
         for(int i=0;i<Qty;i++){
             System.out.println("Selecting Age Category for Customer "+i);
             System.out.println("0 for CHILD");
@@ -886,6 +887,14 @@
                 Qty=-1;
                 break;
             }
+
+            if(age==2){
+                seniorFB++;
+            }
+            if(age==1){
+                studentFB++;
+            }
+
             ticketagelist.add(age);
         }
         //clear buffer
@@ -897,12 +906,25 @@
 
         LocalDate dt = LocalDate.parse(dateS, df);
         Day d;
+        String x=" ";
         Integer starttime = Integer.parseInt( tss.getStartTime().substring(0,2) );
         Integer endtime = Integer.parseInt( tss.getEndTime().substring(0,2) );
         if (dt.getDayOfWeek() == DayOfWeek.MONDAY || dt.getDayOfWeek() == DayOfWeek.TUESDAY || dt.getDayOfWeek() == DayOfWeek.WEDNESDAY) {
             d = Day.MON_TO_WED;
-        } else if (dt.getDayOfWeek() == DayOfWeek.FRIDAY && ( !(starttime <= 6 && 6 <= endtime) || (starttime>6) || (endtime<6)  ) ) {
+            if(studentFB!=0){
+                x=x+studentFB + " Free 12oz Coke ";
+            }
+            if(seniorFB!=0){
+                x=x+seniorFB + " Free Tea / Coffee ";
+            }
+        } else if (dt.getDayOfWeek() == DayOfWeek.FRIDAY && ( ( (starttime<6) && (endtime<6) ) || ( (starttime>6) && (endtime>6) )  ) ) {
             d = Day.FRI_BEFORE_6;
+            if(studentFB!=0){
+                x=x+studentFB + " Free 12oz Coke ";
+            }
+            if(seniorFB!=0){
+                x=x+seniorFB + " Free Tea / Coffee ";
+            }
         } else if (dt.getDayOfWeek() == DayOfWeek.THURSDAY) {
             d = Day.THURS;
         }  else {
@@ -916,7 +938,9 @@
             }
         }
 
-        String transid = "Cinema :"+cine.getName()+" Movie title :"+movie.getTitle()+" "+tss.getairingtimeformat()+" "+d+" "+tss.getRoom().getCinemaClass()+" "+movie.getType();
+
+
+        String transid = "Cinema :"+cine.getName()+" Movie title :"+movie.getTitle()+" "+tss.getairingtimeformat()+" "+d+" "+tss.getRoom().getCinemaClass()+" "+movie.getType()+x;
         System.out.println(transid);
         seatdesc = tss.getRoom().getseattypedesc();
         //System.out.println("Seatdesc : "+seatdesc);
@@ -1014,6 +1038,7 @@
                     ticketprice += value;
                 }
             }
+
             for (Map.Entry<String, Double> day : dayList.entrySet()) {
                 String keys = day.getKey();
                 Double value = day.getValue();
Index: src/main/java/MovieGoerModule/MovieGoer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package MovieGoerModule;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class MovieGoer extends Account{\r\n    private String name;\r\n\r\n    private int age; //see how\r\n    private AgeOfMovieGoer agetype;\r\n\r\n    private int mobile;\r\n    private String email;\r\n    private ArrayList<Transaction> history;\r\n\r\n\r\n    public MovieGoer(String username, String password) {\r\n        super(username,password);\r\n        super.setRole(Role.MOVIEGOER);\r\n        this.name = \"\";\r\n        this.email = \"\";\r\n        this.mobile = -1;\r\n        this.history = new ArrayList<>();\r\n    }\r\n\r\n    public MovieGoer(String username, String password,String name, int mobile, String email) {\r\n        super(username,password);\r\n        super.setRole(Role.MOVIEGOER);\r\n        this.name = name;\r\n        this.mobile = mobile;\r\n        this.email = email;\r\n        this.history = new ArrayList<>();\r\n    }\r\n\r\n    public String getName() {\r\n        return this.name;\r\n    }\r\n\r\n    public int getMobile() {\r\n        return this.mobile;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public int getAge(){return age;}\r\n\r\n\r\n    public AgeOfMovieGoer getAgetype() {\r\n        return agetype;\r\n    }\r\n\r\n    public ArrayList<Transaction> getTransactionHistory(){\r\n        return this.history;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public void setMobile(int mobile) {\r\n        this.mobile = mobile;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n\r\n    public void setAge(int age){\r\n        //CHILD, ADULT, SENIOR, STUDENT\r\n        this.age = age;\r\n        if(age>50){\r\n            agetype = AgeOfMovieGoer.SENIOR;\r\n        } else if (age>20) {\r\n            agetype = AgeOfMovieGoer.ADULT;\r\n        } else if (age>10) {\r\n            agetype = AgeOfMovieGoer.STUDENT;\r\n        } else {\r\n            agetype = AgeOfMovieGoer.CHILD;\r\n        }\r\n    }\r\n    \r\n    public void addTransaction(Transaction trans){\r\n        this.history.add(trans);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MovieGoerModule/MovieGoer.java b/src/main/java/MovieGoerModule/MovieGoer.java
--- a/src/main/java/MovieGoerModule/MovieGoer.java	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ b/src/main/java/MovieGoerModule/MovieGoer.java	(date 1668079554763)
@@ -70,7 +70,7 @@
     public void setAge(int age){
         //CHILD, ADULT, SENIOR, STUDENT
         this.age = age;
-        if(age>50){
+        if(age>54){
             agetype = AgeOfMovieGoer.SENIOR;
         } else if (age>20) {
             agetype = AgeOfMovieGoer.ADULT;
Index: ViewTop5Settings.txt
===================================================================
diff --git a/ViewTop5Settings.txt b/ViewTop5Settings.txt
deleted file mode 100644
--- a/ViewTop5Settings.txt	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ /dev/null	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
@@ -1,3 +0,0 @@
-�� sr java.util.LinkedHashMap4�N\l�� Z accessOrderxr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t 
-VIEW_BY_SALESsr java.lang.Boolean� r�՜�� Z valuexpt VIEW_BY_RATINGq ~ x 
\ No newline at end of file
Index: Pricelist.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Pricelist.txt b/Pricelist.txt
deleted file mode 100644
--- a/Pricelist.txt	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ /dev/null	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
@@ -1,6 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr java.util.LinkedHashMap4�N\l�� Z accessOrderxr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t CHILDsr java.lang.Double���J)k� D valuexr java.lang.Number������  xp@       t STUDENTsq ~ @      t SENIORsq ~ @       t ADULTsq ~ @      x sq ~ ?@     w      t SEATsq ~ @       t COUPLE_SEATsq ~ @      t 
-ELITE_SEATsq ~ @      t ULTIMA_SEATsq ~ @      x sq ~ ?@     w      t REGULARsq ~ @      t DOLBYsq ~ @      t PLATINUMsq ~ @$      x sq ~ ?@     w      t 
-REGULAR_2Dsq ~ @      t 
-REGULAR_3Dsq ~ @      t BLOCKBUSTER_2Dsq ~ @      t BLOCKBUSTER_3Dsq ~ @      x sq ~ ?@     w      t 
-MON_TO_WEDsq ~ @       t THURSsq ~ ?�      t FRI_BEFORE_6sq ~ @      t HOLIDAYsq ~ @      t REMAINING_DAYSsq ~ @      x x
\ No newline at end of file
Index: guestTransaction.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guestTransaction.txt b/guestTransaction.txt
deleted file mode 100644
--- a/guestTransaction.txt	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ /dev/null	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
@@ -1,1 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp    w    x
\ No newline at end of file
Index: Cineplex.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Cineplex.txt b/Cineplex.txt
deleted file mode 100644
--- a/Cineplex.txt	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ /dev/null	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
@@ -1,52 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr MovieGoerModule.Cineplex��u���� L listOfMoviest Ljava/util/ArrayList;L namet Ljava/lang/String;L roomsq ~ xpsq ~     w   sr MovieGoerModule.Movie�@p�-j�r I movieDurationMinF ratingD salesL age_restrictiont  LMovieGoerModule/AgeOfMovieGoer;L 
-allreviewsq ~ L castq ~ L directorq ~ L statust LMovieGoerModule/Status;L synopsisq ~ L 	timeslotsq ~ L titleq ~ L typet LMovieGoerModule/TypeOfMovie;xp   s��          ~r MovieGoerModule.AgeOfMovieGoer          xr java.lang.Enum          xpt STUDENTsq ~      w    xsq ~     w   t 
-Ikue Otanit Kaori Nazukat 
-Mayumi Tanakaxt Goro Taniguchi~r MovieGoerModule.Status          xq ~ 
-t NOW_SHOWINGt oUta - the most beloved singer in the world.
-Her voice, which she sings with while concealing her true identity
-sq ~     w   sr MovieGoerModule.TimeSlot� �@� I 
-movieDurationL datet Ljava/time/LocalDate;L endTimeq ~ L 	movieNameq ~ L 	movieTypeq ~ 
-L roomt LMovieGoerModule/Cinema;L 	startTimeq ~ L 
-stringDateq ~ xp   ssr 
-java.time.Ser�]��"H�  xpw  �xt 1810t ONE PIECE FILM RED~r MovieGoerModule.TypeOfMovie          xq ~ 
-t BLOCKBUSTER_2Dsr MovieGoerModule.Cinema3|����� I COLI ROWL cinemaClasst LMovieGoerModule/ClassOfCinema;L idq ~ [ seatst [[LMovieGoerModule/Seat;xp      
-~r MovieGoerModule.ClassOfCinema          xq ~ 
-t REGULARt AMK_001ur [[LMovieGoerModule.Seat;{�>V�Y  xp   
-ur [LMovieGoerModule.Seat;֘��mq  xp   sr MovieGoerModule.Seat.ӛ���y� Z seatL seattypet LMovieGoerModule/Seattype;xp ~r MovieGoerModule.Seattype          xq ~ 
-t SEATsq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 ~q ~ 5t 
-ELITE_SEATsq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 ~q ~ 5t ULTIMA_SEATsq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 ~q ~ 5t COUPLE_SEATsq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6t 1600t 
-11/12/2022xq ~ "q ~ $sq ~    b��          q ~ sq ~      w    xsq ~     w   t Stephen Chowt 
-Danny Chant Yuen Wahxq ~ �~q ~ t COMING_SOONt ~When the hapless Sing (Stephen Chow) and his dim-witted pal,
-Bone (Feng Xiaogang), try to scam the residents of Pig Sty Alley
-sq ~     w   sq ~    bsq ~ w  �xt 2050t Kung Fu Hustleq ~ $sq ~ &      
-~q ~ *t DOLBYt AMK_002uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6t 1900t 
-18/12/2022xq ~ �q ~ $sq ~    }��          ~q ~ t ADULTsq ~      w    xsq ~     w   t The Rockt Sam Worthingtonxt Jaume Collet-Serraq ~ t,In 2600 BC, the tyrannical king Ahk-Ton of Kahndaq creates the Crown of Sabbac to attain great power. After attempting to stage a revolt, a young slave boy is given the powers of Shazam by the Council of Wizards, transforming him into Kahndaq's heroic champion, who kills Ahk-Ton and ends his reign.
-sq ~     w   sq ~    }sq ~ w  �xt 1720t 
-Black Adam~q ~ #t BLOCKBUSTER_3Dsq ~ &      
-~q ~ *t PLATINUMt AMK_003uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6t 1500t 
-22/11/2022xq ~dq ~esq ~    ���          ~q ~ t CHILDsq ~      w    xsq ~     w   t Zoe Saldanaq ~]xt 
-James Cameron~q ~ t PREVIEWt -the second film in Cameron's Avatar franchisesq ~     w   sq ~    �sq ~ w  �xt 2330t Avatar: The Way of Water~q ~ #t 
-REGULAR_2Dsq ~ &      
-q ~ +q ~ -uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6t 2000t 
-14/12/2022xq ~�q ~�xt Cathay AMK Hubsq ~     w   sq ~ &      
-q ~ +q ~ -uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ &      
-q ~ �q ~ �uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ &      
-q ~hq ~juq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6xsq ~ sq ~     w   sq ~    ���          q ~ sq ~      w    xq ~�q ~�q ~ q ~�sq ~      w    xq ~�q ~ $sq ~    ���          q ~ sq ~      w    xq ~�q ~�q ~ �q ~�sq ~      w    xq ~�q ~ $sq ~    ���          q ~Xsq ~      w    xq ~�q ~�q ~ q ~�sq ~      w    xq ~�q ~esq ~    ���          q ~�sq ~      w    xq ~�q ~�q ~�q ~�sq ~      w    xq ~�q ~�xt Cathay Parkway Paradesq ~     w   sq ~ &      
-q ~ +t PP_001uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ &      
-q ~ �t PP_002uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ &      
-q ~ht PP_003uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6xsq ~ sq ~     w   sq ~    ���          q ~ sq ~      w    xq ~�q ~�q ~ q ~�sq ~      w    xq ~�q ~ $sq ~    ���          q ~ sq ~      w    xq ~�q ~�q ~ �q ~�sq ~      w    xq ~�q ~ $sq ~    ���          q ~Xsq ~      w    xq ~�q ~�q ~ q ~�sq ~      w    xq ~�q ~esq ~    ���          q ~�sq ~      w    xq ~�q ~�q ~�q ~�sq ~      w    xq ~�q ~�xt Cathay West Mallsq ~     w   sq ~ &      
-q ~ +t WM_001uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ &      
-q ~ �t WM_002uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ &      
-q ~ht WM_003uq ~ .   
-uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6uq ~ 0   sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ �sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6sq ~ 2 q ~ 6xx
\ No newline at end of file
Index: Movie.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Movie.txt b/Movie.txt
deleted file mode 100644
--- a/Movie.txt	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ /dev/null	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
@@ -1,15 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr MovieGoerModule.Movie�@p�-j�r I movieDurationMinF ratingD salesL age_restrictiont  LMovieGoerModule/AgeOfMovieGoer;L 
-allreviewst Ljava/util/ArrayList;L castq ~ L directort Ljava/lang/String;L statust LMovieGoerModule/Status;L synopsisq ~ L 	timeslotsq ~ L titleq ~ L typet LMovieGoerModule/TypeOfMovie;xp   s��          ~r MovieGoerModule.AgeOfMovieGoer          xr java.lang.Enum          xpt STUDENTsq ~      w    xsq ~     w   t 
-Ikue Otanit Kaori Nazukat 
-Mayumi Tanakaxt Goro Taniguchi~r MovieGoerModule.Status          xq ~ 
-t NOW_SHOWINGt oUta - the most beloved singer in the world.
-Her voice, which she sings with while concealing her true identity
-sq ~      w    xt ONE PIECE FILM RED~r MovieGoerModule.TypeOfMovie          xq ~ 
-t BLOCKBUSTER_2Dsq ~    b��          q ~ sq ~      w    xsq ~     w   t Stephen Chowt 
-Danny Chant Yuen Wahxq ~ ~q ~ t COMING_SOONt ~When the hapless Sing (Stephen Chow) and his dim-witted pal,
-Bone (Feng Xiaogang), try to scam the residents of Pig Sty Alley
-sq ~      w    xt Kung Fu Hustleq ~ sq ~    }��          ~q ~ 	t ADULTsq ~      w    xsq ~     w   t The Rockt Sam Worthingtonxt Jaume Collet-Serraq ~ t,In 2600 BC, the tyrannical king Ahk-Ton of Kahndaq creates the Crown of Sabbac to attain great power. After attempting to stage a revolt, a young slave boy is given the powers of Shazam by the Council of Wizards, transforming him into Kahndaq's heroic champion, who kills Ahk-Ton and ends his reign.
-sq ~      w    xt 
-Black Adam~q ~ t BLOCKBUSTER_3Dsq ~    ���          ~q ~ 	t CHILDsq ~      w    xsq ~     w   t Zoe Saldanaq ~ -xt 
-James Cameron~q ~ t PREVIEWt -the second film in Cameron's Avatar franchisesq ~      w    xt Avatar: The Way of Water~q ~ t 
-REGULAR_2Dx
\ No newline at end of file
Index: AccountList.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AccountList.txt b/AccountList.txt
deleted file mode 100644
--- a/AccountList.txt	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
+++ /dev/null	(revision 1c44fa90540bade45c757c13d69feb212b76b1ff)
@@ -1,3 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sq ~     w   sr AdminModule.Staff�l�
-� G�  xr MovieGoerModule.Account�:o��I�n L passwordt Ljava/lang/String;L rolet LMovieGoerModule/Role;L usernameq ~ xpt admin123~r MovieGoerModule.Role          xr java.lang.Enum          xpt ADMINt adminxsq ~     w   sr MovieGoerModule.MovieGoer�z��np� I ageI mobileL agetypet  LMovieGoerModule/AgeOfMovieGoer;L emailq ~ L historyt Ljava/util/ArrayList;L nameq ~ xq ~ t user123~q ~ 	t 	MOVIEGOERt user1   ��%~r MovieGoerModule.AgeOfMovieGoer          xq ~ 
-t STUDENTt adamsOKorNot@gmail.comsq ~      w    xt Adamssq ~ t user234q ~ t user2   ��'~q ~ t ADULTt johnIsOk@gmail.comsq ~      w    xt Johnxx
\ No newline at end of file
